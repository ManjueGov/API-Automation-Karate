{
  "info": {
    "name": "eGov-Works",
    "_postman_id": "cb6728b3-55d4-5c4c-2095-372502e6bf33",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "81a8917f-34c4-1c2a-9276-34df7531b2ea",
      "name": "Common",
      "description": "",
      "item": [
        {
          "_postman_id": "098043d4-6053-dc84-55ab-12925653dd4d",
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "00ab05ad-a3c9-426f-9bfe-8b0042eaa765",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
                  "pm.globals.set(\"userName\", jsonData.UserRequest.userName);",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Authorization",
                "value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "username",
                  "value": "clerk",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "12345678",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "password",
                  "type": "text"
                },
                {
                  "key": "scope",
                  "value": "read",
                  "type": "text"
                },
                {
                  "key": "tenantId",
                  "value": "{{tenantId}}",
                  "type": "text"
                }
              ]
            },
            "url": "{{url}}/user/oauth/token",
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3c047c91-6d5b-5aad-7424-4f15474b2ea7",
          "name": "Logout",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
            },
            "url": {
              "raw": "{{url}}/user/_logout?access_token={{access_token}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "user",
                "_logout"
              ],
              "query": [
                {
                  "key": "access_token",
                  "value": "{{access_token}}",
                  "equals": true
                }
              ]
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "cd77ef82-bb8b-e492-34b3-4fbddb2d45c5",
          "name": "Create DocumentDetails",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"requestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"tenantId\" : \"{{tenantId}}\"\n    }\n  },\n  \"documentDetails\" : [\n  \t{\n\t  \t\"objectId\" : \"0001\",\n\t  \t\"objectType\" : \"AbstractEstimate\",\n\t  \t\"fileStore\" : \"01234\",\n\t  \t\"tenantId\" : \"{{tenantId}}\"\n\t}\n  ]\n}"
            },
            "url": "{{url}}/works-services/documentdetails/_create",
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "335f29ed-1e90-5cf1-c0dc-a6f745473e0f",
          "name": "Update DocumentDetails",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"requestInfo\": {\n    \"apiId\": \"update\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"documentDetails\" : [\n  \t{\n  \t\t\"id\": \"a50e69b18c594b2385b71fcda85cd9e2\",\n  \t\t\"tenantId\" : \"{{tenantId}}\",\n\t  \t\"objectId\" : \"14321\",\n\t  \t\"objectType\" : \"AbstractEstimate\",\n\t  \t\"fileStore\": \"01235\"\n\t}\n  ]\n\t}\n}"
            },
            "url": "{{url}}/works-services/documentdetails/_update",
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "42118331-8307-15e3-6471-9231339cfefe",
      "name": "Masters",
      "description": "Works related Masters",
      "item": [
        {
          "_postman_id": "dc5bacd5-78e9-51b2-4197-dacb040553db",
          "name": "SOR",
          "description": "",
          "item": [
            {
              "_postman_id": "cef93241-7bc4-bcd7-4c6a-4a8e208eac8d",
              "name": "Create SOR",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1925975e-ed86-480b-9b99-f398e4722ea5",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.round((Math.random() * 100));",
                      "var num2 = pm.globals.get(\"i\");",
                      "pm.environment.set(\"SOR_code\", \"SOR\"+(++num2));",
                      "pm.globals.set(\"i\", num2);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "2b3ceb61-a3f1-42b4-b655-81da0d6994ee",
                    "type": "text/javascript",
                    "exec": [
                      "var createSorResponse = JSON.parse(responseBody);",
                      "",
                      "pm.environment.set(\"SOR_id\", createSorResponse.scheduleOfRates[0].id);",
                      "pm.environment.set(\"SOR_code\", createSorResponse.scheduleOfRates[0].code);",
                      "",
                      "tests[\"Status is success\"] = createSorResponse.ResponseInfo.status.has(\"SUCCESSFUL\");",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
                      "});",
                      "",
                      "pm.environment.set(\"sorCreate\", JSON.stringify(createSorResponse));"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"works-masters\",\r\n    \"ver\": \"string\",\r\n    \"ts\": 0,\r\n    \"action\": \"create\",\r\n    \"did\": \"string\",\r\n    \"key\": \"string\",\r\n    \"msgId\": \"string\",\r\n    \"requesterId\": \"string\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  },\r\n  \"scheduleOfRates\": [\r\n    {\r\n      \"tenantId\": \"{{tenantId}}\",\r\n      \"code\": \"{{SOR_code}}\",\r\n      \"description\": \"Rates for CC-ash Road work\",\r\n      \"scheduleCategory\": {\r\n        \"tenantId\": \"{{tenantId}}\",\r\n        \"name\": \"Concrete roads - FAKE\",\r\n        \"code\": \"CCR - FAKE\"\r\n      },\r\n      \"uom\": {\r\n        \"tenantId\": \"{{tenantId}}\",\r\n        \"code\": \"MTR\"\r\n      },\r\n      \"sorRates\": [\r\n        {\r\n          \"tenantId\": \"{{tenantId}}\",\r\n          \"fromDate\": 1425200691000,\r\n          \"toDate\": 1427879091000,\r\n          \"rate\": 54.32,\r\n          \"deleted\": false\r\n        },\r\n        {\r\n          \"tenantId\": \"{{tenantId}}\",\r\n          \"fromDate\": 1427879091000,\r\n          \"toDate\": 1430471091000,\r\n          \"rate\": 87.65,\r\n          \"deleted\": false\r\n        }\r\n      ],\r\n      \"marketRates\": []\r\n    }\r\n  ]\r\n}"
                },
                "url": "{{url}}/works-masters/v1/scheduleofrates/_create",
                "description": "Create SOR as works master data"
              },
              "response": []
            },
            {
              "_postman_id": "a8700bef-773e-70a6-2e14-e25d4ec31335",
              "name": "Search SOR",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8db43edd-2af1-4ee2-bf94-eb968e8e7d11",
                    "type": "text/javascript",
                    "exec": [
                      "var sorResponse = JSON.parse(responseBody);",
                      "var sorCreate = JSON.parse(environment.sorCreate);",
                      "",
                      "console.log(sorCreate);",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t\"RequestInfo\":{\r\n\t\"apiId\": \"works-masters\",\r\n\t\"ver\": \"1.0\",\r\n\t\"ts\": 0,\r\n\t\"action\": \"search\",\r\n\t\"did\": \"1\",\r\n\t\"key\": \"string\",\r\n\t\"msgId\": \"string\",\r\n\t\"requesterId\": \"clerk\",\r\n\t\"authToken\": \"{{access_token}}\"\r\n\t}\r\n}"
                },
                "url": {
                  "raw": "{{url}}/works-masters/v1/scheduleofrates/_search?tenantId={{tenantId}}&sorCodes={{SOR_code}}&ids={{SOR_id}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-masters",
                    "v1",
                    "scheduleofrates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "sorCodes",
                      "value": "{{SOR_code}}",
                      "equals": true
                    },
                    {
                      "key": "ids",
                      "value": "{{SOR_id}}",
                      "equals": true
                    }
                  ]
                },
                "description": "Search SOR master data"
              },
              "response": []
            },
            {
              "_postman_id": "d4e05487-50b5-783a-18b3-ac79ee666aee",
              "name": "Update SOR",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"string\",\r\n    \"ver\": \"string\",\r\n    \"ts\": 0,\r\n    \"action\": \"string\",\r\n    \"did\": \"string\",\r\n    \"key\": \"string\",\r\n    \"msgId\": \"string\",\r\n    \"requesterId\": \"string\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  },\r\n    \"scheduleOfRates\": [\r\n        {\r\n            \"id\": \"1e6aeec99a554db3b4930cc489665a17\",\r\n            \"tenantId\": \"default\",\r\n            \"code\": \"SOR105\",\r\n            \"description\": \"Rates for CC-ash Road work\",\r\n            \"scheduleCategory\": {\r\n                \"id\": null,\r\n                \"tenantId\": \"default\",\r\n                \"name\": \"Concrete roads - FAKE\",\r\n                \"code\": \"CCR - FAKE\"\r\n            },\r\n            \"uom\": {\r\n                \"id\": null,\r\n                \"code\": \"MTR\",\r\n                \"description\": null,\r\n                \"category\": null,\r\n                \"active\": true,\r\n                \"coversionFactor\": null,\r\n                \"baseuom\": false,\r\n                \"createdBy\": null,\r\n                \"createdDate\": null,\r\n                \"lastModifiedBy\": null,\r\n                \"lastModifiedDate\": null\r\n            },\r\n            \"sorRates\": [],\r\n            \"marketRates\": [\r\n                {\r\n                    \r\n                    \"tenantId\": \"default\",\r\n                    \r\n                    \"fromDate\": 1483253217000,\r\n                    \"toDate\": 1485845217000,\r\n                    \"rate\": 500,\r\n                    \"deleted\": false,\r\n                    \"isMigrated\": false,\r\n                    \"auditDetails\": {\r\n                        \"createdBy\": \"clerk\",\r\n                        \"lastModifiedBy\": \"clerk\",\r\n                        \"createdTime\": 1513666497065,\r\n                        \"lastModifiedTime\": 1513666497065\r\n                    }\r\n                },\r\n                {\r\n                    \r\n                    \"tenantId\": \"default\",\r\n                    \r\n                    \"fromDate\": 1485845217000,\r\n                    \"toDate\": 1488264417000,\r\n                    \"rate\": 324.63,\r\n                    \"deleted\": false,\r\n                    \"isMigrated\": false,\r\n                    \"auditDetails\": {\r\n                        \"createdBy\": \"clerk\",\r\n                        \"lastModifiedBy\": \"clerk\",\r\n                        \"createdTime\": 1513666497065,\r\n                        \"lastModifiedTime\": 1513666497065\r\n                    }\r\n                }\r\n        \t],\r\n            \"deleted\": false,\r\n            \"auditDetails\": {\r\n                \"createdBy\": \"clerk\",\r\n                \"lastModifiedBy\": \"clerk\",\r\n                \"createdTime\": 1513666497065,\r\n                \"lastModifiedTime\": 1513666497065\r\n            }\r\n        }\r\n    ]\r\n}"
                },
                "url": "{{url}}/works-masters/v1/scheduleofrates/_update",
                "description": "Update SOR"
              },
              "response": []
            },
            {
              "_postman_id": "cb669d02-266c-aa38-ee6e-0a5208141fd0",
              "name": "SOR_Without_Mandatory",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "83889621-5c97-4b07-9c8c-13993e124cb8",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "cc645e07-a6aa-4c0d-9745-dc97f45a2b84",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Tenant Id Mandatory check Matches\"] = jsonData.Errors[0].message;",
                      "",
                      "pm.test(\"Tenant Id Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"string\",\r\n    \"ver\": \"string\",\r\n    \"ts\": 0,\r\n    \"action\": \"string\",\r\n    \"did\": \"string\",\r\n    \"key\": \"string\",\r\n    \"msgId\": \"string\",\r\n    \"requesterId\": \"string\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  },\r\n  \"scheduleOfRates\": [\r\n    {\r\n      \"tenantId\": null,\r\n      \"code\": null,\r\n      \"description\": null,\r\n      \"scheduleCategory\": {\r\n        \"id\": 2,\r\n        \"tenantId\": null,\r\n        \"name\": null,\r\n        \"code\": null\r\n      },\r\n      \"uom\": {\r\n        \"id\": 7,\r\n        \"tenantId\": null,\r\n        \"code\": null\r\n      },\r\n      \"sorRates\": [\r\n        {\r\n          \"tenantId\": null,\r\n          \"fromDate\": null,\r\n          \"toDate\": 1491034943000,\r\n          \"rate\": null,\r\n          \"deleted\": false\r\n        }\r\n    ],\r\n      \"marketRates\":[\r\n        {\r\n          \"tenantId\": null,\r\n          \"fromDate\": null,\r\n          \"toDate\": 1491034943000,\r\n          \"rate\": null,\r\n          \"deleted\": false\r\n        }\r\n   \t],\r\n      \"deleted\": false\r\n    }\r\n  ]\r\n}"
                },
                "url": "{{url}}/works-masters/v1/scheduleofrates/_create",
                "description": "Create SOR as works master data without any mandatory"
              },
              "response": []
            },
            {
              "_postman_id": "fa7d890c-8633-cc37-c313-248dd51fd2dc",
              "name": "M1",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3f6a19ae-9081-4fd2-a0a3-f5897c59275b",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "9fc5a5c1-93be-4536-954a-df1ae7189f4c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"SOR code Mandatory check Matches\"] = jsonData.Errors[0].message;",
                      "tests[\"SOR description Mandatory check Matches\"] = jsonData.Errors[1].message;",
                      "",
                      "pm.test(\"SOR description Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});",
                      "pm.test(\"SOR description Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[1].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"string\",\r\n    \"ver\": \"string\",\r\n    \"ts\": 0,\r\n    \"action\": \"string\",\r\n    \"did\": \"string\",\r\n    \"key\": \"string\",\r\n    \"msgId\": \"string\",\r\n    \"requesterId\": \"string\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  },\r\n  \"scheduleOfRates\": [\r\n    {\r\n      \"tenantId\": \"{{tenantId}}\",\r\n      \"code\": null,\r\n      \"description\": null,\r\n      \"scheduleCategory\": {\r\n        \"id\": 2,\r\n        \"tenantId\": \"{{tenantId}}\",\r\n        \"name\": \"Concrete roads - FAKE\",\r\n        \"code\": \"CCR - FAKE\"\r\n      },\r\n      \"uom\": {\r\n        \"id\": 7,\r\n        \"tenantId\": \"{{tenantId}}\",\r\n        \"code\": \"MTR\"\r\n      },\r\n      \"sorRates\": [\r\n        {\r\n          \"tenantId\": \"{{tenantId}}\",\r\n          \"fromDate\": 1459412543000,\r\n          \"toDate\": 1491034943000,\r\n          \"rate\": 124.63,\r\n          \"deleted\": false\r\n        }\r\n    ],\r\n      \"marketRates\":[\r\n        {\r\n          \"tenantId\": \"{{tenantId}}\",\r\n          \"fromDate\": 1459412543000,\r\n          \"toDate\": 1491034943000,\r\n          \"rate\": 124.63,\r\n          \"deleted\": false\r\n        }\r\n   \t],\r\n      \"deleted\": false\r\n    }\r\n  ]\r\n}"
                },
                "url": "{{url}}/works-masters/v1/scheduleofrates/_create",
                "description": "Create SOR as works master data"
              },
              "response": []
            },
            {
              "_postman_id": "bf3fde37-aa73-403e-d9dd-9f28e63b515d",
              "name": "validate MDMS data",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "188a1c12-4640-4f64-a425-5cf235be6d45",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "2b3ceb61-a3f1-42b4-b655-81da0d6994ee",
                    "type": "text/javascript",
                    "exec": [
                      "var createSorResponse = JSON.parse(responseBody);",
                      "",
                      "pm.environment.set(\"SOR_id\", createSorResponse.scheduleOfRates[0].id);",
                      "pm.environment.set(\"SOR_code\", createSorResponse.scheduleOfRates[0].code);",
                      "",
                      "tests[\"Status is success\"] = createSorResponse.ResponseInfo.status.has(\"SUCCESSFUL\");",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
                      "});",
                      "",
                      "pm.environment.set(\"sorCreate\", JSON.stringify(createSorResponse));"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"works-masters\",\r\n    \"ver\": \"string\",\r\n    \"ts\": 0,\r\n    \"action\": \"create\",\r\n    \"did\": \"string\",\r\n    \"key\": \"string\",\r\n    \"msgId\": \"string\",\r\n    \"requesterId\": \"string\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  },\r\n  \"scheduleOfRates\": [\r\n    {\r\n      \"tenantId\": null,\r\n      \"code\": \"{{SOR_code}}\",\r\n      \"description\": \"Rates for CC-ash Road work\",\r\n      \"scheduleCategory\": null,\r\n      \"uom\": null,\r\n      \"sorRates\": [\r\n        {\r\n          \"tenantId\": \"{{tenantId}}\",\r\n          \"fromDate\": 1427884148000,\r\n          \"toDate\": 1459420148000,\r\n          \"rate\": 88.88,\r\n          \"deleted\": false\r\n        }\r\n      ],\r\n      \"marketRates\": []\r\n    }\r\n  ]\r\n}"
                },
                "url": "{{url}}/works-masters/v1/scheduleofrates/_create",
                "description": "Create SOR as works master data with validate MDMS data"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "b15e6297-5d6a-acc2-65f4-d8a6368d58cf",
          "name": "ET",
          "description": "",
          "item": [
            {
              "_postman_id": "0392d6ed-6b11-dfcd-308a-5abf3b82d074",
              "name": "Create ET",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1711c7c5-e3e5-4ce2-a6b0-9cd3a1a87910",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.round((Math.random() * 100));",
                      "var num2 = pm.globals.get(\"j\");",
                      "pm.environment.set(\"ET_code\", \"ET\"+(++num2));",
                      "pm.globals.set(\"j\", num2);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "0f831016-d4a1-45fc-8d07-069f0290abb9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "if(pm.response.to.have.status(200)){",
                      "tests[\"Status is success\"] = jsonData.ResponseInfo.status.has(\"SUCCESSFUL\");",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
                      "});",
                      "",
                      "pm.environment.set(\"ET_id\", jsonData.estimateTemplates[0].id);",
                      "pm.environment.set(\"ET_code\", jsonData.estimateTemplates[0].code);",
                      "pm.environment.set(\"ETactivity_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].id);",
                      "pm.environment.set(\"nonSOR_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].nonSOR.id);",
                      "",
                      "}else if(pm.response.to.have.status(400)){",
                      "pm.test(\"Duplicate Estimate Template validation message matches\", function () {",
                      "    pm.response.to.have.status(400);",
                      "    pm.expect(\"Given Estimate Template already exists: \"+\"ET_code\").to.include(jsonData.Errors[0].message);",
                      "});",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"estimateTemplates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"ROADs Estimate Template\",\n      \"code\": \"{{ET_code}}\",\n      \"active\": true,\n      \"description\": \"Estimate Template for Road\",\n      \"typeOfWork\": {\n      \t\"code\": \"{{typeCode}}\"\n      },\n      \"estimateTemplateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateTemplate\": null,\n          \"scheduleOfRate\": null,          \n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"nonSOR\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"description\": \"Man power\",\n            \"uom\": {\n            \t\"code\":\"NOS\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-masters/v1/estimatetemplates/_create",
                "description": "Estimate Templates for work creation"
              },
              "response": []
            },
            {
              "_postman_id": "f6f9fca7-04fc-02d6-9bdc-31da547590c0",
              "name": "Create ET with SOR",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1711c7c5-e3e5-4ce2-a6b0-9cd3a1a87910",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.round((Math.random() * 100));",
                      "var num2 = pm.globals.get(\"j\");",
                      "pm.environment.set(\"ET_code\", \"ET\"+(++num2));",
                      "pm.globals.set(\"j\", num2);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "93f4101d-c148-40f4-bebe-ddce363a5b0d",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "if(pm.response.to.have.status(200)){",
                      "tests[\"Status is success\"] = jsonData.ResponseInfo.status.has(\"SUCCESSFUL\");",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
                      "});",
                      "",
                      "pm.environment.set(\"ET_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].id);",
                      "pm.environment.set(\"ET_code\", jsonData.estimateTemplates[0].code);",
                      "pm.environment.set(\"ETactivity_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].estimateTemplate);",
                      "pm.environment.set(\"nonSOR_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].nonSOR.id);",
                      "",
                      "}else if(pm.response.to.have.status(400)){",
                      "pm.test(\"Duplicate Estimate Template validation message matches\", function () {",
                      "    pm.response.to.have.status(400);",
                      "    pm.expect(\"Given Estimate Template already exists: \"+\"ET_code\").to.include(jsonData.Errors[0].message);",
                      "});",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"estimateTemplates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"ROADs Estimate Template\",\n      \"code\": \"{{ET_code}}\",\n      \"active\": true,\n      \"description\": \"Estimate Template for Road\",\n      \"typeOfWork\": {\n      \t\"code\": null\n      },\n      \"estimateTemplateActivities\": [\n         {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\":{\n          \t\"id\": \"{{SOR_id}}\",\n          \t\"code\": \"{{SOR_code}}\"\n          },\n          \"uom\": {\n            \"code\": \"MTR\"\n          },\n          \"nonSOR\": null,\n          \"deleted\": false          \n        }\n      ]\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-masters/v1/estimatetemplates/_create",
                "description": "Estimate Templates for work creation:\nWith only SOR as estimate activity"
              },
              "response": []
            },
            {
              "_postman_id": "2ff742e0-943d-140a-db33-8b25fc8db3b4",
              "name": "Create ET with NonSOR",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1711c7c5-e3e5-4ce2-a6b0-9cd3a1a87910",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.round((Math.random() * 100));",
                      "var num2 = pm.globals.get(\"j\");",
                      "pm.environment.set(\"ET_code\", \"ET\"+(++num2));",
                      "pm.globals.set(\"j\", num2);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "0f831016-d4a1-45fc-8d07-069f0290abb9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "if(pm.response.to.have.status(200)){",
                      "tests[\"Status is success\"] = jsonData.ResponseInfo.status.has(\"SUCCESSFUL\");",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
                      "});",
                      "",
                      "pm.environment.set(\"ET_id\", jsonData.estimateTemplates[0].id);",
                      "pm.environment.set(\"ET_code\", jsonData.estimateTemplates[0].code);",
                      "pm.environment.set(\"ETactivity_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].id);",
                      "pm.environment.set(\"nonSOR_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].nonSOR.id);",
                      "",
                      "}else if(pm.response.to.have.status(400)){",
                      "pm.test(\"Duplicate Estimate Template validation message matches\", function () {",
                      "    pm.response.to.have.status(400);",
                      "    pm.expect(\"Given Estimate Template already exists: \"+\"ET_code\").to.include(jsonData.Errors[0].message);",
                      "});",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"estimateTemplates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"ROADs Estimate Template\",\n      \"code\": \"{{ET_code}}\",\n      \"active\": true,\n      \"description\": \"Estimate Template for Road\",\n      \"typeOfWork\": \"ROADS\",\n      \"estimateTemplateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateTemplate\": null,\n          \"scheduleOfRate\": null,          \n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"nonSOR\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"description\": \"Man power\",\n            \"uom\": {\n            \t\"code\":\"NOS\"\n            }\n          },\n          \"unitRate\": 500   \n        }\n      ]\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-masters/v1/estimatetemplates/_create",
                "description": "Estimate Templates for work creation:\n\nWith only Non SOR as estimate activity"
              },
              "response": []
            },
            {
              "_postman_id": "19066a44-41a5-4eb2-b447-9d0c3f081c84",
              "name": "Create ET(SOR & NonSOR)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1711c7c5-e3e5-4ce2-a6b0-9cd3a1a87910",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.round((Math.random() * 100));",
                      "var num2 = pm.globals.get(\"j\");",
                      "pm.environment.set(\"ET_code\", \"ET\"+(++num2));",
                      "pm.globals.set(\"j\", num2);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "a224e367-f380-40aa-9cc2-9b1a5c2c439a",
                    "type": "text/javascript",
                    "exec": [
                      "// var jsonData = JSON.parse(responseBody);",
                      "",
                      "// if(pm.response.to.have.status(200)){",
                      "// tests[\"Status is success\"] = jsonData.ResponseInfo.status.has(\"SUCCESSFUL\");",
                      "// pm.test(\"Status code is 200\", function () {",
                      "//     pm.response.to.have.status(200);",
                      "// });",
                      "// pm.test(\"Successful POST request\", function () {",
                      "//     pm.expect(pm.response.code).to.be.oneOf([201,202]);",
                      "// });",
                      "",
                      "// pm.environment.set(\"ET_id\", jsonData.estimateTemplates[0].id);",
                      "// pm.environment.set(\"ET_code\", jsonData.estimateTemplates[0].code);",
                      "// pm.environment.set(\"ETactivity_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].id);",
                      "// pm.environment.set(\"nonSOR_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[1].nonSOR.id);",
                      "",
                      "// }else if(pm.response.to.have.status(400)){",
                      "// pm.test(\"Duplicate Estimate Template validation message matches\", function () {",
                      "//     pm.response.to.have.status(400);",
                      "//     pm.expect(\"Given Estimate Template already exists: \"+\"ET_code\").to.include(jsonData.Errors[0].message);",
                      "// });",
                      "// }"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"estimateTemplates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"Buildings Estimate Template\",\n      \"code\": \"{{ET_code}}\",\n      \"active\": true,\n      \"description\": \"Estimate Template for Buildings supplies\",\n      \"typeOfWork\": {\n      \t\"code\": \"Supplies\"\n      },\n      \"estimateTemplateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateTemplate\": null,\n          \"scheduleOfRate\":{\n          \t\"code\": \"SOR63\"\n          },\n          \"uom\": {\n            \"code\": \"TON\"\n          },\n          \"nonSOR\": null,\n          \"deleted\": false          \n        },\n      \t\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateTemplate\": null,\n          \"scheduleOfRate\": null,\n          \"uom\": {\n            \"code\": \"TON\"\n          },\n          \"nonSOR\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"description\": \"Man power\",\n            \"uom\": {\n            \t\"code\": \"NOS\"\n            }\n          },\n          \"deleted\": false\n        }\n      ]\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-masters/v1/estimatetemplates/_create",
                "description": "Create Estimate Templates for work creation with both SOR and Non SOR"
              },
              "response": []
            },
            {
              "_postman_id": "4c8aac42-1ce5-4044-6653-80bee410e740",
              "name": "Search ET",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"RequestInfo\": {\n        \"apiId\": \"emp\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"search\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}"
                },
                "url": {
                  "raw": "{{url}}/works-masters/v1/estimatetemplates/_search?tenantId={{tenantId}}&code={{ET_code}}&ids={{ET_id}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-masters",
                    "v1",
                    "estimatetemplates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "code",
                      "value": "{{ET_code}}",
                      "equals": true
                    },
                    {
                      "key": "ids",
                      "value": "{{ET_id}}",
                      "equals": true
                    }
                  ]
                },
                "description": "Search Estimate Templates created"
              },
              "response": []
            },
            {
              "_postman_id": "6876a1e5-6cf1-5c7b-4dcd-9fb1cbe14a62",
              "name": "Update ET",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"estimateTemplates\": [\n        {\n            \"id\": \"bafda305d1154dfa9995b8c0dbd10057\",\n            \"tenantId\": \"default\",\n            \"name\": \"ROADs Estimate Template\",\n            \"code\": \"ET74\",\n            \"active\": true,\n            \"description\": \"Estimate Template for Road\",\n            \"typeOfWork\": {\n                \"id\": null,\n                \"tenantId\": null,\n                \"name\": null,\n                \"code\": null,\n                \"description\": null,\n                \"active\": null,\n                \"parent\": null\n            },\n            \"subTypeOfWork\": {\n                \"id\": null,\n                \"tenantId\": null,\n                \"name\": null,\n                \"code\": null,\n                \"description\": null,\n                \"active\": null,\n                \"parent\": null\n            },\n            \"estimateTemplateActivities\": [\n                {\n                    \"id\": \"248f4cc633ed4586ad201bf279ca5bf1\",\n                    \"tenantId\": \"default\",\n                    \"estimateTemplate\": \"bafda305d1154dfa9995b8c0dbd10057\",\n                    \"scheduleOfRate\": {\n                        \"id\": \"1e6aeec99a554db3b4930cc489665a17\",\n                        \"tenantId\": null,\n                        \"code\": null,\n                        \"description\": null,\n                        \"scheduleCategory\": null,\n                        \"uom\": null,\n                        \"sorRates\": [],\n                        \"marketRates\": null,\n                        \"deleted\": false,\n                        \"auditDetails\": null\n                    },\n                    \"uom\": {\n                        \"id\": null,\n                        \"code\": \"MTR\",\n                        \"description\": null,\n                        \"category\": null,\n                        \"active\": true,\n                        \"coversionFactor\": null,\n                        \"baseuom\": false,\n                        \"createdBy\": null,\n                        \"createdDate\": null,\n                        \"lastModifiedBy\": null,\n                        \"lastModifiedDate\": null\n                    },\n                    \"nonSOR\": null,\n                    \"deleted\": false,\n                    \"auditDetails\": null\n                },\n                {\n                    \"tenantId\": \"default\",\n                    \"estimateTemplate\": \"bafda305d1154dfa9995b8c0dbd10057\",\n                    \"scheduleOfRate\": null,\n                    \"uom\": {\n                        \"id\": null,\n                        \"code\": \"MTR\",\n                        \"description\": null,\n                        \"category\": null,\n                        \"active\": true,\n                        \"coversionFactor\": null,\n                        \"baseuom\": false,\n                        \"createdBy\": null,\n                        \"createdDate\": null,\n                        \"lastModifiedBy\": null,\n                        \"lastModifiedDate\": null\n                    },\n                    \"nonSOR\": {\n                    \t\"description\":\"asdfsdf\",\n                    \t\"tenantId\":\"default\",\n                    \t\"uom\":{\n                    \t\t\"code\":\"NOS\"\n                    \t}\n                    },\n                    \"deleted\": false,\n                    \"auditDetails\": null\n                }\n            ],\n            \"deleted\": false,\n            \"auditDetails\": null\n        }\n    ]\n}"
                },
                "url": "{{url}}/works-masters/v1/estimatetemplates/_update",
                "description": "Update/Modify the ET created as per the requirement"
              },
              "response": []
            },
            {
              "_postman_id": "c59b5b28-4aa2-af31-0a4e-edd4b73d13ab",
              "name": "Create ET Validations",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "aed27b21-649f-4b83-86e1-7335837b6456",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8255226a-2003-4cc5-a2f3-f0d775887f5e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Tenant Id Mandatory check Matches\"] = jsonData.Errors[2].message;",
                      "tests[\"ET Name Mandatory check Matches\"] = jsonData.Errors[3].message;",
                      "tests[\"ET code Mandatory check Matches\"] = jsonData.Errors[7].message;",
                      "tests[\"ET active Mandatory check Matches\"] = jsonData.Errors[8].message;",
                      "tests[\"Type of work Mandatory check Matches\"] = jsonData.Errors[4].message;",
                      "tests[\"Tenant Id (estimateTemplateActivities) Mandatory check Matches\"] = jsonData.Errors[1].message;",
                      "tests[\"UOM (estimateTemplateActivities) Mandatory check Matches\"] = jsonData.Errors[0].message;",
                      "tests[\"Tenant Id (Non SOR) Mandatory check Matches\"] = jsonData.Errors[6].message;",
                      "tests[\"Description (Non SOR) Mandatory check Matches\"] = jsonData.Errors[5].message;",
                      "tests[\"UOM (Non SOR) Mandatory check Matches\"] = jsonData.Errors[9].message;",
                      "",
                      "pm.test(\"Tenant Id Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"estimateTemplates\": [\n    {\n      \"tenantId\": null,\n      \"name\": null,\n      \"code\": null,\n      \"active\": null,\n      \"description\": \" Template for laying CC road for 100 metres \",\n      \"typeOfWork\": {\n        \"code\": null\n      },\n      \"estimateTemplateActivities\": [\n        {\n          \"tenantId\": null,\n          \"scheduleOfRate\": {\n            \"code\": \"{{SOR_id}}\"\n          },\n          \"uom\": {\n            \"code\": null\n          },\n          \"nonSOR\": {\n            \"tenantId\": null,\n            \"description\": null,\n            \"uom\": {\n              \"code\": null\n            }\n          }\n        }\n      ]\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-masters/v1/estimatetemplates/_create",
                "description": "Mandatory check for create Estimate Template"
              },
              "response": []
            },
            {
              "_postman_id": "e946d8a6-da75-453f-8f6a-7143a22fb488",
              "name": "typeOfWork_MDMS",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bc53973-4445-4f2f-8573-938198877760",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "var typeOfWork = jsonData.MdmsRes.Works.TypeOfWork;",
                      "var typeOfWorkCode = [];",
                      "",
                      "for(var i=0;i<typeOfWork.length; i++){",
                      "    typeOfWorkCode[i] = jsonData.MdmsRes.Works.TypeOfWork[i].code;",
                      "}",
                      "var code = typeOfWorkCode[Math.floor(Math.random() * typeOfWork.length)];",
                      "pm.environment.set(\"typeCode\", code);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-services\",\n    \"ver\": null,\n    \"ts\": null,\n    \"action\": \"Search\",\n    \"did\": null,\n    \"key\": null,\n    \"msgId\": \"search with from and to values\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"MdmsCriteria\": {\n    \"tenantId\": \"{{tenantId}}\",\n    \"moduleDetails\": [\n      {\n        \"moduleName\": \"Works\",\n        \"masterDetails\": [\n          {\n            \"name\": \"TypeOfWork\"\n          }\n        ]\n      }\n    ]\n  }\n}"
                },
                "url": "{{url}}/egov-mdms-service/v1/_search",
                "description": null
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "40476709-a53c-d747-c5f0-59e1ae62b425",
          "name": "Works MDMS",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-services\",\n    \"ver\": null,\n    \"ts\": null,\n    \"action\": \"Search\",\n    \"did\": null,\n    \"key\": null,\n    \"msgId\": \"search with from and to values\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"MdmsCriteria\": {\n    \"tenantId\": \"{{tenantId}}\",\n    \"moduleDetails\": [\n      {\n        \"moduleName\": \"Works\",\n        \"masterDetails\": [\n          {\n            \"name\": \"ModeOfAllotment\"\n          }\n        ]\n      }\n    ]\n  }\n}"
            },
            "url": "{{url}}/egov-mdms-service/v1/_search",
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8e44f590-9544-3630-aae5-0bce2555710d",
          "name": "ScheduleOfCategory",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "pm.environment.set(\"EXCAVATION\", jsonData.MdmsRes.Works.ScheduleCategory[0].code);",
                  "pm.environment.set(\"ConcreteRoads\", jsonData.MdmsRes.Works.ScheduleCategory[1].code);",
                  "pm.environment.set(\"BtRoads\", jsonData.MdmsRes.Works.ScheduleCategory[2].code);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-services\",\n    \"ver\": null,\n    \"ts\": null,\n    \"action\": \"Search\",\n    \"did\": null,\n    \"key\": null,\n    \"msgId\": \"search with from and to values\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"MdmsCriteria\": {\n    \"tenantId\": \"{{tenantId}}\",\n    \"moduleDetails\": [\n      {\n        \"moduleName\": \"Works\",\n        \"masterDetails\": [\n          {\n            \"name\": \"ScheduleCategory\"\n          }\n        ]\n      }\n    ]\n  }\n}"
            },
            "url": "{{url}}/egov-mdms-service/v1/_search",
            "description": "Search Schedule Of Category"
          },
          "response": []
        },
        {
          "_postman_id": "91dd406d-19bc-498c-3eb5-9d732c0f9f44",
          "name": "UOM",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "// pm.environment.set(\"Kilograms\", jsonData.MdmsRes.common-masters.Uom[0].code);",
                  "// pm.environment.set(\"Ton\", jsonData.MdmsRes.common-masters.Uom[1].code);",
                  "// pm.environment.set(\"Numbers\", jsonData.MdmsRes.common-masters.Uom[3].code);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"common-services\",\n    \"ver\": null,\n    \"ts\": null,\n    \"action\": \"Search\",\n    \"did\": null,\n    \"key\": null,\n    \"msgId\": \"search with from and to values\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"MdmsCriteria\": {\n    \"tenantId\": \"{{tenantId}}\",\n    \"moduleDetails\": [\n      {\n        \"moduleName\": \"common-masters\",\n        \"masterDetails\": [\n          {\n            \"name\": \"Uom\"\n          }\n        ]\n      }\n    ]\n  }\n}"
            },
            "url": "{{url}}/egov-mdms-service/v1/_search",
            "description": "Search Unit of Measurement"
          },
          "response": []
        },
        {
          "_postman_id": "13fd7fa8-fa8d-2aab-250e-fb2a9821965d",
          "name": "Search DocumentDetails",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"requestInfo\":{\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n    }\n }"
            },
            "url": {
              "raw": "{{url}}/works-services/documentdetails/_search?tenantId={{tenantId}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "works-services",
                "documentdetails",
                "_search"
              ],
              "query": [
                {
                  "key": "tenantId",
                  "value": "{{tenantId}}",
                  "equals": true
                }
              ]
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7f53d958-7731-ca00-3df4-11fc2d2cc176",
          "name": "Search Project Code",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"requestInfo\":{\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"search\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n    }\n }"
            },
            "url": {
              "raw": "{{url}}/works-estimate/v1/projectcodes/_search?tenantId={{tenantId}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "works-estimate",
                "v1",
                "projectcodes",
                "_search"
              ],
              "query": [
                {
                  "key": "tenantId",
                  "value": "{{tenantId}}"
                }
              ]
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "9d45f138-ce73-bbd9-ed49-33e42df3626e",
          "name": "Department MDMS",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59935d7c-579d-4d26-a280-af846f9e8f81",
                "type": "text/javascript",
                "exec": [
                  "var obj = JSON.parse(responseBody);",
                  "var commonMasters = obj.MdmsRes[\"common-masters\"].Department;",
                  "// var code = commonMasters[Math.floor(Math.random() * obj.MdmsRes[\"common-masters\"].Department.length)];",
                  "",
                  "for( var k in commonMasters){",
                  "    var dep = commonMasters[k].code;",
                  "        console.log(dep);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n                  \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
            },
            "url": {
              "raw": "{{url}}/egov-mdms-service/v1/_search?tenantId={{tenantId}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "egov-mdms-service",
                "v1",
                "_search"
              ],
              "query": [
                {
                  "key": "tenantId",
                  "value": "{{tenantId}}",
                  "equals": true
                }
              ]
            },
            "description": null
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "f85f425b-a639-51bd-3ba9-ac2090a2d1fa",
      "name": "Format Test",
      "description": "",
      "item": [
        {
          "_postman_id": "10ce76b3-75f7-4e19-318b-ad4a2cfe93a1",
          "name": "Abstract Estimate",
          "description": "",
          "item": [
            {
              "_postman_id": "668ebecd-11a4-d6af-a9b6-7deb747b4992",
              "name": "Search",
              "description": null,
              "item": [
                {
                  "_postman_id": "e9f7b46f-f683-a58c-293b-264260d98d03",
                  "name": "Search by ids",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&ids=35cea189c4f6426a839269f53a52ab1c",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "ids",
                          "value": "35cea189c4f6426a839269f53a52ab1c",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "17b3bfa8-520f-f090-055a-7643950df2c4",
                  "name": "Search all",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "b6ee836a-e8ad-5ba6-6531-8b4792bd85e2",
                  "name": "Search by abstractEstimateNumbers",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&abstractEstimateNumbers=AE/AS/000047/11/2017-18",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "abstractEstimateNumbers",
                          "value": "AE/AS/000047/11/2017-18",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "31968f76-b19e-9b4c-b24f-86c50ba19a10",
                  "name": "Search by adminSanctionNumbers",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"5824d35d-76e1-455a-b1af-e4f9c2c6317e\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&adminSanctionNumbers=1234567",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "adminSanctionNumbers",
                          "value": "1234567",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "1d2d5983-7ec4-e45b-bcd1-eb3a8c5bd320",
                  "name": "Search by departmentCodes",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&departmentCodes=AS",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "departmentCodes",
                          "value": "AS",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "2bfd889a-2e71-c2f4-3ce2-4de0c2258e80",
                  "name": "Search by fundCodes",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&fundCodes=01",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "fundCodes",
                          "value": "01",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "c5378256-52e2-1637-d23a-acdac152c3a3",
                  "name": "Search by functionCodes",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&functionCodes=20",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "functionCodes",
                          "value": "20",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "317c04e7-165c-962b-2cd1-1d3280235988",
                  "name": "Search by budgetHeadCodes",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&budgetHeadCodes=4122001-CWIP-Office Buildings",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "budgetHeadCodes",
                          "value": "4122001-CWIP-Office Buildings",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "223bbd88-cac9-2bfc-e155-fe8532f0b364",
                  "name": "Search by adminSanctionFromDate",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&adminSanctionFromDate=1509088048",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "adminSanctionFromDate",
                          "value": "1509088048",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "ce979d35-608b-dda0-2462-6f1d3880428f",
                  "name": "Search by adminSanctionToDate",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&adminSanctionToDate=1509088047",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "adminSanctionToDate",
                          "value": "1509088047",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "7a34b566-b2e3-e9db-1ebd-fb40a2861b0f",
                  "name": "Search by spillOverFlag",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&spillOverFlag=true",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "spillOverFlag",
                          "value": "true",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "0706e585-3406-a50e-6775-acdceb8d09c4",
                  "name": "Search by createdBy",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&createdBy=10001",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "createdBy",
                          "value": "10001",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "57b1ee70-77cf-d53d-da5c-1eb469f508cc",
                  "name": "Search by workIdentificationNumbers",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&workIdentificationNumbers=000004/11/2017-18",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "workIdentificationNumbers",
                          "value": "000004/11/2017-18",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "513bce27-a53f-a7dd-40e5-90508bee8ad6",
                  "name": "Search by statuses",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"e42089af-ec63-4744-b92b-2ac5450f9646\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&statuses=CREATED",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "statuses",
                          "value": "CREATED",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                },
                {
                  "_postman_id": "b4995ca8-956a-ad63-1c02-f5489d9e2b63",
                  "name": "Search by nameOfWork",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"e42089af-ec63-4744-b92b-2ac5450f9646\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n    \t}\n\t}\n}"
                    },
                    "url": {
                      "raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&nameOfWork=Road Construction",
                      "host": [
                        "egov-micro-dev",
                        "egovernments",
                        "org"
                      ],
                      "path": [
                        "works-estimate",
                        "v1",
                        "abstractestimates",
                        "_search"
                      ],
                      "query": [
                        {
                          "key": "tenantId",
                          "value": "default",
                          "equals": true
                        },
                        {
                          "key": "nameOfWork",
                          "value": "Road Construction",
                          "equals": true
                        }
                      ]
                    },
                    "description": null
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "2011808b-e9f4-9893-5857-972d39262f63",
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "clerk",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "12345678",
                      "type": "text"
                    },
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "scope",
                      "value": "read",
                      "type": "text"
                    },
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{url}}/user/oauth/token",
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "ccb861e0-775f-341b-e76c-18d0ef270024",
              "name": "AE_withWorkflow",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN/\"+year+\"/\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE/ENG/\"+year+\"/\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS/ENG/NS/\"+year+\"/\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN/\"+year+\"/\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
                      "});",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "pm.environment.set(\"AE_id\", jsonData.abstractEstimates[0].id);",
                      "pm.environment.set(\"AEdetails_id\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].id);",
                      "pm.environment.set(\"AE_workflow\", jsonData.abstractEstimates[0].abstractEstimateNumber);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"\",\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"subject\": \"Estimation for Road Construction\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"20\"\n      },\n      \"description\": \"Abstract Estimate for Project Cost Estimation\",\n      \"budgetGroup\": {\n        \"code\": \"00\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ED\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"Cheif Engineer\"\n      },\n      \"status\": \"CREATED\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"mode_1\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"RoadsFake\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"CCRoadsFake\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"nature_1\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"technicalSanctionNumber\": \"{{technicalSanctionNumber}}\",\n      \"technicalSanctionDate\": \"{{epochDate}}\",\n      \"technicalSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Road Construction\",\n          \"estimateAmount\": \"800000\",\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": \"500000\"\n        }\n      ],\n      \"workFlowDetails\": {\n      \t\"department\": \"ED\",\n      \t\"designation\": \"JE\",\n      \t\"assignee\": 509,\n        \"action\": \"create\"\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "0fb53f0c-7f73-ccfd-9652-3653772146ec",
              "name": "AE_withoutMandate",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "3d205a5f-127d-4ff0-b159-e7d60269eb43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "console.log(jsonData.Errors.length);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": null,\n      \"dateOfProposal\": null,\n      \"subject\": null,\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": null,\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": null,\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": null,\n      \"modeOfAllotment\": {\n        \"code\": null\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": null\n      },\n      \"subTypeOfWork\": {\n        \"code\": null\n      },\n      \"natureOfWork\": {\n        \"code\": null\n      },\n      \"ward\": {\n        \"code\": null\n      },\n      \"locality\": {\n        \"code\": null\n      },\n      \"workCategory\": null,\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": null,\n      \"dpRemarks\": null,\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": null,\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "Mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "f172bb7f-6bb4-f243-f665-24e812f2b7a6",
              "name": "Create Spill over Estimate",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"abstractEstimateNumber\", \"AE/\"+year+\"/\"+num1);",
                      "pm.environment.set(\"referenceNumber\", \"Ref.Num.\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN/\"+year+\"/\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE/ENG/\"+year+\"/\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS/ENG/NS/\"+year+\"/\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN/\"+year+\"/\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"subject\": \"Spill Over project estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"1234\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Legacy work related project estimation data entry\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"abcd\"\n      },\n      \"status\": \"\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"financialSanctionNumber\": \"1234\",\n      \"financialSanctionDate\": \"{{epochDate}}\",\n      \"financialSanctionBy\": {\n        \"userName\": \"abcd\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": 1234,\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": true,\n      \"billsCreated\": true,\n      \"spillOverFlag\": true,\n      \"detailedEstimateCreated\": true,\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"fundSanctioningAuthority\":\"abcd\",\n      \"pmcRequired\":\"false\",\n      \"pmcType\":\"pmc type\",\n      \"pmcName\":\"pmc Name\",\n      \"workProposedAsPerDP\":\"true\",\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Road Construction\",\n          \"estimateAmount\": 1000.12,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": 1000.123\n        }\n      ]\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "47c030da-f50d-2cac-6b93-99af08429700",
              "name": "Search Estimate",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "abstractestimates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    }
                  ]
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "0fe81c4b-e259-9efd-496e-9e721e5c5f9a",
              "name": "Update Estimate",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"userInfo\": {\n     \"tenantId\": \"{{tenantId}}\"\n    }\n  },\n  \"abstractEstimates\": [\n    {\n      \"id\": \"{{AE_id}}\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"AE/ED/000020/11/2017-18\",\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"subject\": \"Project Cost Estimation for Bridge\",\n      \"referenceType\": \"Demandfrompublic\",\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"20\"\n      },\n      \"description\": \"Abstract Estimate for Project Cost Estimation\",\n      \"budgetGroup\": {\n        \"code\": \"00\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ED\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"Cheif Engineer\"\n      },\n      \"status\": \"CHECKED\",\n      \"stateId\": \"1096\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"mode_1\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"RoadsFake\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"CCRoadsFake\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"nature_1\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"technicalSanctionNumber\": \"{{technicalSanctionNumber}}\",\n      \"technicalSanctionDate\": \"{{epochDate}}\",\n      \"technicalSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"abstractEstimateDetails\": [\n        {\n          \"id\": \"{{AEdetails_id}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Road Construction\",\n          \"estimateAmount\": \"5512345\",\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": \"5500000\"\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"Submit\",\n        \"assignee\": 509\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/abstractestimates/_update",
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "4e512014-9089-afd6-b7b4-dff5cd0aec6d",
              "name": "Estimate Appropriation",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"resMsgId\": \"placeholder\",\n    \"status\": \"200\",\n    \"apiId\": null,\n    \"ver\": null,\n    \"authToken\": \"{{access_token}}\",\n    \"ts\": \"123456789456\",\n    \"key\": null,\n    \"action\":\"create\",\n    \"userInfo\":{\n   \t\"tenantId\" : \"{{tenantId}}\",\n   \t\"username\" : \"ritesh\",\n   \t\"id\":1,\n       \"roles\" : []\n   }\n    },\n   \"estimateAppropriations\": [\n     {\n     \t\"id\":\"233e85b41ef8483b8192d80f69893cea\",\n       \"budgetUsage\":\"final1\",\n       \"objectNumber\":\"OBN1/c\",\n       \"tenantId\":\"{{tenantId}}\",\n       \"objectType\":\"AbstractEstimate\"\n     }\n     \n     ]\n}"
                },
                "url": {
                  "raw": "{{url}}/works-services/estimateappropriations/_create?tenantId={{tenantId}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-services",
                    "estimateappropriations",
                    "_create"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    }
                  ]
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "37c0c640-3ae5-a954-a70c-f94f96b6b4b6",
              "name": " Create Project Code",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"tenantId\" : \"{{tenantId}}\"\n    }\n  },\n   \"projectCodes\": [\n     {\n       \"id\":\"1d5145cf571946f2a287c97acd60e594\",\n       \"name\":\"Road Project\",\n       \"code\": \"Road\",\n       \"description\":\"Construction of Road\",\n       \"active\": true,\n       \"projectValue\":1000,\n       \"completionDate\":1234568794,\n       \"status\":\"CLOSED\",\n       \"tenantId\":\"{{tenantId}}\"\n     }]\n}"
                },
                "url": "{{url}}/works-estimate/projectcodes/_create",
                "description": "Project code create"
              },
              "response": []
            },
            {
              "_postman_id": "0af25655-4424-799f-d5ca-ad7c7c429f6a",
              "name": "Update Project Code",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"tenantId\" : \"{{tenantId}}\"\n    }\n  },\n   \"projectCodes\": [\n     {\n       \"id\":\"1d5145cf571946f2a287c97acd60e594\",\n       \"name\":\"Road Project\",\n       \"code\": \"Road\",\n       \"description\":\"Construction of Road\",\n       \"active\": false,\n       \"projectValue\":1000,\n       \"completionDate\":1234568794,\n       \"status\":\"CREATED\",\n       \"tenantId\":\"{{tenantId}}\"\n     }]\n}"
                },
                "url": "{{url}}/works-estimate/projectcodes/_update",
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "24f50e71-a0b9-5789-894d-a4c20faaaa47",
              "name": "1-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "1d5fb6e9-d714-48c7-9c39-777472d6a5dd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Tenant Id Mandatory check Matches\"] = jsonData.Errors[0].message;",
                      "",
                      "pm.test(\"Tenant Id Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": null,\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "0d08257c-7c50-676b-76aa-c1a67ba50661",
              "name": "2-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "eba7607c-9817-48ca-9e21-f035a7287910",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Date of Proposal Mandatory check Matches\"] = jsonData.Errors[0].message;",
                      "",
                      "pm.test(\"Date Of Proposal Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": null,\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "date of proposal mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "e2470765-4469-42f8-13fb-5676d4c9c3a8",
              "name": "3-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8366b6aa-f2af-4d11-9078-94cd873b5727",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Subject Mandatory check Matches\"] = jsonData.Errors[0].message;",
                      "",
                      "pm.test(\"Subject Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": null,\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "subject mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "53b93328-d8c3-6194-96fc-ab3b1555616d",
              "name": "4-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "7b9c2582-1b3a-41f0-a575-022dad7dbf06",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Department Mandatory check Matches\"] = jsonData.Errors[0].message;",
                      "",
                      "pm.test(\"Department Mandatory validation message matches\", function () {",
                      "    pm.expect(\"Department data is required\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": null\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "department mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "e7e6f735-2ac9-58b7-6d2e-ae50415b115e",
              "name": "5-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "35766f08-ae97-4bc9-bfb3-ae633dc33b53",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Reference Type Mandatory check Matches\"] = jsonData.Errors[0].message;",
                      "",
                      "pm.test(\"Reference Type Mandatory validation message matches\", function () {",
                      "    pm.expect(\"Reference Type is required\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\": null\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "reference type mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "b9ac8b51-5ac4-64bc-a4ad-b7ab9a2a87da",
              "name": "6-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "cd676c6e-16c7-45ee-bac5-2b38f5270763",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Reference Number Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"Reference Number Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": null,\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "referenceNumber mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "26b2cdb5-09e2-bbd2-3466-669dd1571a00",
              "name": "7-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "6ec53fc4-6441-493b-a81e-9f3f24608036",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Description Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"Description Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": null,\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "description mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "6c133f9f-931b-cfad-b00f-1d48beac7bf3",
              "name": "8-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "935cd243-3b30-4f6c-95a3-c8d73e37ea77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Nature Of Work Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"Nature Of Work Mandatory validation message matches\", function () {",
                      "    pm.expect(\"Nature Of Work is required\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": null\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "natureOfWork mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "1f457e70-995b-ba9d-e7ec-522834d1e25a",
              "name": "9-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "762cb145-7e5f-4b5c-b947-39e7d35a85c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Type Of Work Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"Type Of Work Mandatory validation message matches\", function () {",
                      "    pm.expect(\"Type of work is required\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": null\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "typeOfWork mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "508aa8b4-b950-b7fd-03a5-ee64d843e77c",
              "name": "10-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "85c1b097-2ce9-498a-aab5-1f8d06fd656b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Sub TypeOfWork Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"Sub TypeOfWork Mandatory validation message matches\", function () {",
                      "    pm.expect(\"Type of work is required\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": null\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "subTypeOfWork mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "f8aa714e-204f-01e2-0db7-96cce70cdda7",
              "name": "11-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "a5512a2e-a428-4a06-beff-254001dea29c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"workCategory Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"workCategory Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": null,\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "workCategory mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "28715f1c-8e3f-6871-60e6-1d76cb994f7b",
              "name": "12-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "74250d87-82b2-43bb-a083-c4cfac3c5662",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Mode Of Allotment Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"Mode Of Allotment Mandatory validation message matches\", function () {",
                      "    pm.expect(\"Mode Of Allotment is required\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": null\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "modeOfAllotment mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "b0075633-9edf-77cd-53c4-1d58715cfc6e",
              "name": "13-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "bbb77d4f-bfbf-496e-bd15-cc0dfda688a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Ward Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"Ward Mandatory validation message matches\", function () {",
                      "    pm.expect(\"Please provide valid data for Ward\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": null\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "ward mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "cf63d6ce-691a-590d-e7b2-853c304a2f88",
              "name": "14-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "22e479af-63c0-4bf6-9598-ec34c0c4627e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"locality Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"locality Mandatory validation message matches\", function () {",
                      "    pm.expect(\"Please provide valid data for Locality\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": null\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "locality mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "e69e5672-bf88-2f9c-24e3-5ee24f958e75",
              "name": "15-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "a78d2cb4-b3b9-492b-a97c-cbff9b282964",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"workProposedAsPerDP Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"workProposedAsPerDP Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": null,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "workProposedAsPerDP"
              },
              "response": []
            },
            {
              "_postman_id": "9aa651ce-2eab-1d6e-5f63-89ed4760a603",
              "name": "16-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "a5e8348d-6604-42e1-ac84-ac53cc7d082d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"dpRemarks Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"dpRemarks Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\": null,\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "dpRemarks"
              },
              "response": []
            },
            {
              "_postman_id": "2c20386d-b84c-3762-7eb5-8c90a67125b2",
              "name": "17-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "a94e35a3-03d7-42c4-bc8a-859e3eccca55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"abstractEstimateDetails Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"abstractEstimateDetails Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": null,\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "abstractEstimateDetails"
              },
              "response": []
            },
            {
              "_postman_id": "4d7d650f-f7fc-d7f3-c415-336a81d626c9",
              "name": "18-18",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "34c14bae-e62c-4302-849c-63553a181617",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Beneficiary Mandatory check Matches\"] = jsonData.Errors[0].code;",
                      "",
                      "pm.test(\"Beneficiary Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": null,\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "beneficiary mandatory check"
              },
              "response": []
            },
            {
              "_postman_id": "a3165523-8b1c-26ee-f703-06f940801ba4",
              "name": "Mandatory Check",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "78dd5c07-8beb-447a-9be2-ceca6330e591",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"response\", jsonData);",
                      "pm.environment.set(\"AE_id\", jsonData.abstractEstimates[0].id);",
                      "pm.environment.set(\"AEdetails_id\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].id);",
                      "pm.environment.set(\"AE_workflow\", jsonData.abstractEstimates[0].abstractEstimateNumber);",
                      "pm.environment.set(\"status\", jsonData.abstractEstimates[0].status);",
                      "pm.environment.set(\"stateId\", jsonData.abstractEstimates[0].stateId);",
                      "",
                      "postman.setNextRequest(\"Search Estimate\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": null,\n      \"dateOfProposal\": \"{{dateOfProposal}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    },\n    {\n      \"tenantId\": \"{[tenantId]}\",\n      \"dateOfProposal\": null,\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    },\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": null,\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    },\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": null\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "Required:\n      - tenantId\n      - dateOfProposal\n      - department\n      - subject\n      - referenceType\n      - referenceNumber\n      - description\n      - natureOfWork\n      - typeOfWork\n      - subTypeOfWork\n      - beneficiary\n      - workCategory\n      - modeOfAllotment\n      - ward\n      - locality\n      - workProposedAsPerDP\n      - dpRemarks\n      - abstractEstimateDetails"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "330c2792-9a57-aaf0-7865-029a528e74b8",
          "name": "Detailed Estimate",
          "description": "",
          "item": [
            {
              "_postman_id": "7d499014-eb0b-b3f0-9765-12e7a59b789c",
              "name": "Login as Clerk",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Tenant ID is default\"] = jsonData.UserRequest.roles[0].tenantId;",
                      "",
                      "postman.setNextRequest(\"Create Estimate\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "clerk",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "12345678",
                      "type": "text"
                    },
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "scope",
                      "value": "read",
                      "type": "text"
                    },
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{url}}/user/oauth/token",
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "bd4bbef2-7a37-130a-63b8-490e85ccc0f9",
              "name": "Search SOR",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9aa3ec1e-dc82-4800-8d55-bf011b97c9cc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"variable_key\", \"variable_value\");",
                      "",
                      "pm.environment.set(\"variable_key\", \"variable_value\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t\"RequestInfo\":{\r\n\t\"apiId\": \"works-masters\",\r\n\t\"ver\": \"1.0\",\r\n\t\"ts\": 0,\r\n\t\"action\": \"search\",\r\n\t\"did\": \"1\",\r\n\t\"key\": \"string\",\r\n\t\"msgId\": \"string\",\r\n\t\"requesterId\": \"clerk\",\r\n\t\"authToken\": \"{{access_token}}\"\r\n\t}\r\n}"
                },
                "url": {
                  "raw": "{{url}}/works-masters/v1/scheduleofrates/_search?tenantId={{tenantId}}&pageSize=500",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-masters",
                    "v1",
                    "scheduleofrates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "pageSize",
                      "value": "500",
                      "equals": true
                    }
                  ]
                },
                "description": "Search SOR master data"
              },
              "response": []
            },
            {
              "_postman_id": "f98bf211-d6fa-07d3-e4c8-4b5689a19d63",
              "name": "Search Project Code",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\":{\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"search\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n    }\n }"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/projectcodes/_search?tenantId={{tenantId}}&pageSize=500",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "projectcodes",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "pageSize",
                      "value": "500",
                      "equals": true
                    }
                  ]
                },
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "33a8025e-4d05-38c7-f767-38b182cf8033",
              "name": "Create DE Normal",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"estimateDate\": 1491034943000,\n      \"nameOfWork\": \"Detailed Estimation for the proposed work\",\n      \"description\": \"Detailed estimate create\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"abstractEstimateDetail\": {\n        \"projectCode\": {\n          \"code\": \"{{projectCode}}\"\n        },\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"workValue\": 9000,\n      \"estimateValue\": 10000,\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": {\n        \"code\": \"Buildings\"\n      },\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"location\": \"Sarjapur Road\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"detailedEstimateDeductions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"chartOfAccounts\": {\n          \t\"glcode\": \"1234\"\n          },\n          \"amount\": 1\n        }\n      ],\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"estimateOverheads\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"overhead\": {\n            \"id\": 1,\n            \"code\": \"TAXFake\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"name\": \"test\",\n            \"accountCode\": \"test\"\n          },\n          \"amount\": 1000\n        }\n      ],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"id\": \"0893c2e14f7d437f958a4586dacab305\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR15\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"unitRate\": 1000,\n          \"estimateRate\": 10000,\n          \"quantity\": 10\n        }\n      ],\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/detailedestimates/_create",
                "description": "Create Detailed Estimate with workflow"
              },
              "response": []
            },
            {
              "_postman_id": "f7d9e2b9-6692-bc8f-333a-0008d6b62df8",
              "name": "Search Detailed Estimate",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/detailedestimates/_search?tenantId={{tenantId}}&pageSize=500",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "detailedestimates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "pageSize",
                      "value": "500",
                      "equals": true
                    }
                  ]
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "93af18b8-1e97-9f26-487d-25c9b90d23c7",
              "name": "Search Estimate",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "postman.setNextRequest(\"Logout as Clerk\");"
                    ],
                    "id": "59240b63-3c9f-4099-90a7-519398c498da",
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&abstractEstimateNumbers={{abstractEstimateNumber}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "abstractestimates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "abstractEstimateNumbers",
                      "value": "{{abstractEstimateNumber}}",
                      "equals": true
                    }
                  ]
                },
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "7dbfcb3d-6935-25e1-d065-bfceba956e1f",
              "name": "Deductions&Overheads Empty",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "84ff913f-8c39-47b4-b462-a77c6d47502f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.globals.get(\"projectCode\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"estimateDate\": 1491034943000,\n      \"nameOfWork\": \"Detailed Estimation for the proposed work\",\n      \"description\": \"Detailed estimate create\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"abstractEstimateDetail\": {\n        \"projectCode\": {\n          \"code\": \"{{projectCode}}\"\n        },\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"workValue\": 10000,\n      \"estimateValue\": 10000,\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": {\n        \"code\": \"Buildings\"\n      },\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"location\": \"Sarjapur Road\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"detailedEstimateDeductions\": [],\n      \"estimateOverheads\": [],\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"id\": \"0893c2e14f7d437f958a4586dacab305\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR15\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"unitRate\": 1000,\n          \"estimateRate\": 10000,\n          \"quantity\": 10\n        }\n      ],\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/detailedestimates/_create",
                "description": "When Deductions and Overheads are Empty\nThen WorkValue = EstimateValue"
              },
              "response": []
            },
            {
              "_postman_id": "70735f18-5fb7-af21-e32f-9acf50c178be",
              "name": "Validations",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "84ff913f-8c39-47b4-b462-a77c6d47502f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.globals.get(\"projectCode\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "deb56c31-1894-4353-969d-3bed2f1c9f0f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Tenant Id Mandatory check Matches\"] = jsonData.Errors[0].message;",
                      "",
                      "pm.test(\"Tenant Id Mandatory validation message matches\", function () {",
                      "    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": null,\n      \"estimateDate\": null,\n      \"nameOfWork\": null,\n      \"description\": null,\n      \"department\": null,\n      \"status\": null,\n      \"abstractEstimateDetail\": {\n        \"projectCode\": {\n          \"code\": \"{{projectCode}}\"\n        },\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"workValue\": 9000,\n      \"estimateValue\": 10000,\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": null,\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": null,\n      \"ward\": null,\n      \"location\": \"Sarjapur Road\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"detailedEstimateDeductions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"chartOfAccounts\": {\n          \t\"glcode\": \"1234\"\n          },\n          \"amount\": 1\n        }\n      ],\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"estimateOverheads\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"overhead\": {\n            \"id\": 1,\n            \"code\": \"TAXFake\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"name\": \"test\",\n            \"accountCode\": \"test\"\n          },\n          \"amount\": 1000\n        }\n      ],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"id\": \"0893c2e14f7d437f958a4586dacab305\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR15\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"unitRate\": 1000,\n          \"estimateRate\": 10000,\n          \"quantity\": 10\n        }\n      ],\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/detailedestimates/_create",
                "description": "Create Detailed Estimate:\nrequired:\n      - tenantId\n      - nameOfWork\n      - estimateDate\n      - worksType\n      - natureOfWork\n      - ward\n      - status\n      - department\n      - description"
              },
              "response": []
            },
            {
              "_postman_id": "39803b2e-45ba-29b0-5792-a2ceb707e3d6",
              "name": "Create spilloverDE",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b68d2fee-4c57-4cd5-b652-f01982579233",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"sEstimateNum\", \"Spillover/DE/ENG/\"+num1);",
                      "pm.environment.set(\"sTechSanctionNum\", \"Spillover/DE/TS/\"+num1);",
                      "pm.environment.set(\"sAdminSanctionNum\", \"Spillover/DE/ADN/\"+num1);",
                      "pm.globals.get(\"spilloverPC\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "e65ead77-70f3-46f6-96ec-d7271c5e0054",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"1427784646000\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"estimateNumber\": \"{{sEstimateNum}}\",\n      \"estimateDate\": 1427784646000,\n      \"nameOfWork\": \"Spillover DE\",\n      \"description\": \"Spillover Detailed Estimation for the proposed work\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"adminSanctionNumber\": \"{{sAdminSanctionNum}}\",\n      \"adminSanctionDate\": 1427784646000,\n      \"workValue\": 900,\n      \"estimateValue\": 1000,\n      \"projectCode\": {\n          \"code\": \"{{spilloverPC}}\"\n        },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": {\n        \"code\": \"Buildings\"\n      },\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"location\": \"Sarjapur Road\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"billsCreated\": false,\n      \"spillOverFlag\": true,\n      \"abstractEstimateDetail\": {\n      \t\"nameOfWork\": \"{{sNameOfWork}}\",\n      \t\"estimateAmount\": \"{{sEstimateAmount}}\",\n        \"projectCode\": {\n          \"code\": \"{{sProjectCode}}\"\n        },\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"multiYearEstimates\": [],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"id\": \"8476e765666a43489f0029eefbd42072\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR65\"\n          },\n          \"uom\": {\n            \"code\": \"MTR\"\n          },\n          \"unitRate\": 300,\n          \"quantity\": 3,\n          \"estimateRate\": 900\n        }\n      ],\n      \"estimateOverheads\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"overhead\": {\n          \t\"accountCode\": \"123\",\n          \t\"name\": \"TAXFake\",\n            \"code\": \"TAXFake\",\n            \"tenantId\": \"{{tenantId}}\"\n          },\n          \"amount\": 100\n        }\n      ],\n      \"detailedEstimateDeductions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"chartOfAccounts\":{\n          \t\"glcode\": \"1981\"\n          },\n          \"amount\": 50\n        }\n      ],\n      \"estimateTechnicalSanctions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"technicalSanctionNumber\": \"{{sTechSanctionNum}}\",\n          \"technicalSanctionDate\": 1427784646000,\n          \"technicalSanctionBy\": {\n            \"userName\": \"clerk\"\n          }\n        }\n      ],\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"workFlowDetails\": {\n        \"action\": \"Create\"\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/detailedestimates/_create",
                "description": "Create Detailed Estimate"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "9303a492-6bd1-d6cc-758a-fe5c00664978",
          "name": "Letter of Acceptance",
          "description": "",
          "item": [
            {
              "_postman_id": "4492abc3-4cf9-16bd-971a-20b537f7ed22",
              "name": "Work Order",
              "description": "",
              "item": [],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "df08c8a3-d347-2b2c-567c-f34200ca9073",
          "name": "Measurement Book",
          "description": "",
          "item": [
            {
              "_postman_id": "f5fbecac-6f83-0a4d-d33d-3b584ed5dcc6",
              "name": "Create MB",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"mbRefNo\": \"MB2\",\n      \"contractorComments\": \"Second MB\",\n      \"mbDate\": \"1450434548000\",\n      \"mbIssuedDate\": \"1450434548000\",\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"1\",\n      \"toPageNo\": \"20\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"0a6dc1fcb5694224ba8f4915a63864e0\",\n        \"letterOfAcceptance\": \"6ed57296787d4d92a5fc2678eaba2cb8\",\n        \"detailedEstimate\": {\n        \t\"id\": \"99c9cd02e0f64589a68ac404acb28fe5\",\n        \t\"tenantId\": \"{{tenantId}}\",\n        \t\"estimateNumber\": \"Spillover/DE/ENG/7513\"\n        }\n      },\n      \"revisionLOA\": null,\n      \"status\": \"APPROVED\",\n      \"measurementBookDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"measurementBook\": null,\n          \"quantity\": \"10\",\n          \"rate\": \"100\",\n          \"remarks\": \"remarks\",\n          \"amount\": 1000,\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"sheet remarks\",\n              \"number\": 1,\n              \"length\": 10,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 10,\n              \"measurementBookDetail\": null,\n              \"loaMeasurementSheet\": null\n            }\n          ]\n        }\n      ],\n      \"isLegacyMB\": \"true\",\n      \"mbAmount\": \"1000\",\n      \"approvedDate\": \"1450434548000\",\n      \"documentDetails\": [],\n      \"workFlowDetails\": {\n      \t\"action\": \"create\"\n      }\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "{{url}}/works-measurementbook/v1/measurementbooks/_create?tenantId={{tenantId}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-measurementbook",
                    "v1",
                    "measurementbooks",
                    "_create"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    }
                  ]
                },
                "description": "Create MB for the LOA."
              },
              "response": []
            },
            {
              "_postman_id": "b37366f2-589e-9ddb-67e0-5a899abd723a",
              "name": "Search MB",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"resMsgId\": \"placeholder\",\n    \"msgId\": \"123\",\n    \"status\": \"200\",\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.1\",\n    \"ts\": \"123456789456\",\n    \"key\": null,\n    \"action\":\"search\",\n    \"authToken\":\"{{access_token}}\"\n    }\n}"
                },
                "url": {
                  "raw": "{{url}}/works-measurementbook/v1/measurementbooks/_search?tenantId={{tenantId}}&ids=c2ad65c45e864be181ca3b1f88b1c183",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-measurementbook",
                    "v1",
                    "measurementbooks",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "ids",
                      "value": "c2ad65c45e864be181ca3b1f88b1c183",
                      "equals": true
                    }
                  ]
                },
                "description": "Search MB"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "8f4da07e-a1ed-3cd9-b4e6-1c0574b45051",
      "name": "Functional Test",
      "description": "",
      "item": [
        {
          "_postman_id": "03db5415-6248-cd97-8744-d05403f43b98",
          "name": "Abstract Estimate",
          "description": "Abstract Estimate with workflow",
          "item": [
            {
              "_postman_id": "05c5779e-d5f5-3899-a24f-842869486741",
              "name": "Login as Clerk",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Tenant ID is default\"] = jsonData.UserRequest.roles[0].tenantId;",
                      "",
                      "postman.setNextRequest(\"Create Estimate\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "clerk",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "12345678",
                      "type": "text"
                    },
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "scope",
                      "value": "read",
                      "type": "text"
                    },
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{url}}/user/oauth/token",
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "984e65e0-2881-8ac2-887c-985dc904d4bb",
              "name": "Create Estimate",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9e50aeaf-1e9c-41a4-843d-05971b6b6fe2",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"epochDate\", epoch);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "7a3dc42e-af35-40fc-ae78-2e285d2ad77d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"response\", jsonData);",
                      "pm.environment.set(\"AE_id\", jsonData.abstractEstimates[0].id);",
                      "pm.environment.set(\"AEdetails_id\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].id);",
                      "pm.environment.set(\"AE_workflow\", jsonData.abstractEstimates[0].abstractEstimateNumber);",
                      "pm.globals.set(\"AE_workflow\", jsonData.abstractEstimates[0].abstractEstimateNumber);",
                      "pm.environment.set(\"status\", jsonData.abstractEstimates[0].status);",
                      "pm.environment.set(\"stateId\", jsonData.abstractEstimates[0].stateId);",
                      "",
                      "postman.setNextRequest(\"Search Estimate\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Normal AE: Hospital Construction Project Work\",\n      \"referenceType\": {\n      \t\"code\":\"Demandfrompublic\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"description\": \"Hospital Construction Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"fund\": {\n        \"code\": \"1\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"billsCreated\": false,\n      \"spillOverFlag\": false,\n      \"detailedEstimateCreated\": false,\n      \"implementationPeriod\": 1,\n      \"fundAvailable\": true,\n      \"pmcRequired\": false,\n      \"workProposedAsPerDP\": false,\n      \"dpRemarks\": \"DP Remarks\",\n      \"landAssetRequired\": false,\n      \"noOfLands\": null,\n      \"otherAssetSpecificationRemarks\": \"Other Remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Hospital Building work\",\n          \"estimateAmount\": 10000\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"Create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "41d3d9a7-117a-c866-67e6-ec0da40baba8",
              "name": "Search Estimate",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59240b63-3c9f-4099-90a7-519398c498da",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "postman.setNextRequest(\"Logout as Clerk\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&ids={{AE_id}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "abstractestimates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "ids",
                      "value": "{{AE_id}}",
                      "equals": true
                    }
                  ]
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "bb677bee-68e2-e8f6-26dd-364513a5eabe",
              "name": "Logout as Clerk",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3181149-f32b-436b-810c-101108f83715",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "postman.setNextRequest(\"Login as HOD\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
                },
                "url": {
                  "raw": "{{url}}/user/_logout?access_token={{access_token}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "user",
                    "_logout"
                  ],
                  "query": [
                    {
                      "key": "access_token",
                      "value": "{{access_token}}",
                      "equals": true
                    }
                  ]
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "91b1b2fb-00de-832f-c081-4402fd62a6db",
              "name": "Login as HOD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ce8af706-54e5-455c-9d89-0c3dda536fae",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "postman.setNextRequest(\"Update Estimate\");",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "10001",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "12345678",
                      "type": "text"
                    },
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "scope",
                      "value": "read",
                      "type": "text"
                    },
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{url}}/user/oauth/token",
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "469cc243-0be4-89a5-6923-5d8b8d1ed4a5",
              "name": "Update Estimate",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "da95bda8-1170-4fd7-9d9f-3ae332053876",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"status\", jsonData.abstractEstimates[0].status);",
                      "postman.setNextRequest(\"Search Estimate Checked\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1403f27e-55f6-4481-93ba-c4ba2768aeed",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"userInfo\": {\n     \"tenantId\": \"{{tenantId}}\"\n    }\n  },\n  \"abstractEstimates\": [\n    {\n      \"id\": \"{{AE_id}}\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"{{AE_workflow}}\",\n      \"fund\": {\n        \"code\": \"1\"\n      },\n      \"subject\": \"Normal AE: Hospital Construction Project Work\",\n      \"referenceType\": {\n        \"code\":\"Demandfrompublic\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"description\": \"Abstract Estimate for Project Cost Estimation\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"status\": \"{{status}}\",\n      \"stateId\": \"{{stateId}}\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n    \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"billsCreated\": false,\n      \"spillOverFlag\": false,\n      \"detailedEstimateCreated\": false,\n      \"dpRemarks\": \"Estimation Approved by HOD\",\n      \"documentDetails\": [],\n      \"assetDetails\": [],\n      \"abstractEstimateDetails\": [\n        {\n          \"id\": \"{{AEdetails_id}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Hospital\",\n          \"estimateAmount\": 10000\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"Submit\",\n        \"assignee\": 509\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_update",
                "description": "@JE login"
              },
              "response": []
            },
            {
              "_postman_id": "e21caa6e-9690-6c19-cb4e-7db2f65486dd",
              "name": "Search Estimate Checked",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e1817c88-c14a-48b1-86a7-17bbfe468b51",
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"Logout as HOD\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&abstractEstimateNumbers={{AE_workflow}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "abstractestimates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "abstractEstimateNumbers",
                      "value": "{{AE_workflow}}",
                      "equals": true
                    }
                  ]
                },
                "description": "@JE login"
              },
              "response": []
            },
            {
              "_postman_id": "ed905178-27f0-b5e9-9fc8-5ecbbd6dad74",
              "name": "Logout as HOD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d72a57c7-1e4b-4d6d-9168-ea1114f50096",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "postman.setNextRequest(\"Login as ACC\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
                },
                "url": {
                  "raw": "{{url}}/user/_logout?access_token={{access_token}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "user",
                    "_logout"
                  ],
                  "query": [
                    {
                      "key": "access_token",
                      "value": "{{access_token}}",
                      "equals": true
                    }
                  ]
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "6ede1e18-811d-c64b-1996-9ddfaa90321f",
              "name": "Login as ACC",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f004581-6c45-4f6d-9b04-0e321ff9e8e9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "postman.setNextRequest(\"Update Estimate (FS)\");",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "10001",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "12345678",
                      "type": "text"
                    },
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "scope",
                      "value": "read",
                      "type": "text"
                    },
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{url}}/user/oauth/token",
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "b1f5ac08-3737-8363-971c-24587c73e0b2",
              "name": "Update Estimate (FS)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66e73e74-d525-425c-993c-462b6b9b4d8f",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "pm.globals.set(\"projectCode\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].projectCode.code);",
                      "pm.environment.set(\"status\", jsonData.abstractEstimates[0].status);",
                      "postman.setNextRequest(\"Search Estimate FS\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "276a0fcd-5a6f-4604-a3f6-9d3b83c136e0",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "pm.environment.set(\"financialSanctionNumber\", \"FS-ENG-NS-\"+year+\"-\"+num1);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"userInfo\": {\n     \"tenantId\": \"{{tenantId}}\"\n    }\n  },\n  \"abstractEstimates\": [\n    {\n      \"id\": \"{{AE_id}}\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"{{AE_workflow}}\",\n      \"fund\": {\n        \"code\": \"1\"\n      },\n      \"subject\": \"Normal AE: Hospital Construction Project Work\",\n      \"referenceType\": {\n        \"code\":\"Demandfrompublic\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"description\": \"Abstract Estimate for Project Cost Estimation\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"status\": \"{{status}}\",\n      \"stateId\": \"{{stateId}}\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n    \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"dpRemarks\": \"Estimation Approved by HOD\",\n      \"documentDetails\": [],\n      \"assetDetails\": [],\n      \"financialSanctionNumber\": \"{{financialSanctionNumber}}\",\n      \"financialSanctionDate\": \"{{epochDate}}\",\n      \"financialSanctionBy\": {\n      \t\"userName\": \"10002\"\n      },\n      \"abstractEstimateDetails\": [\n        {\n          \"id\": \"{{AEdetails_id}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Hospital 1\",\n          \"estimateAmount\": 10000\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"Submit\",\n        \"assignee\": 510\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_update",
                "description": "@CE login"
              },
              "response": []
            },
            {
              "_postman_id": "fc0b35fe-50c2-3152-76ca-2d7f73dfbc86",
              "name": "Search Estimate FS",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35bd05a3-0348-4738-b34d-1b87e964c9dd",
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"Logout as ACC\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&ids={{AE_id}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "abstractestimates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "ids",
                      "value": "{{AE_id}}",
                      "equals": true
                    }
                  ]
                },
                "description": "@CE login"
              },
              "response": []
            },
            {
              "_postman_id": "f1f39736-490c-ae9f-14d7-f4711cfe58fe",
              "name": "Logout as ACC",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "63dfd7de-b53f-454f-b57c-ce323b0d6982",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "postman.setNextRequest(\"Login as CE\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
                },
                "url": {
                  "raw": "{{url}}/user/_logout?access_token={{access_token}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "user",
                    "_logout"
                  ],
                  "query": [
                    {
                      "key": "access_token",
                      "value": "{{access_token}}",
                      "equals": true
                    }
                  ]
                },
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "dce0449f-3312-2dc5-7ff1-657c086042df",
              "name": "Login as CE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "14574c10-c0e9-478e-a4de-4eede4639783",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "postman.setNextRequest(\"Update Estimate (AS)\");",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "10002",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "12345678",
                      "type": "text"
                    },
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "scope",
                      "value": "read",
                      "type": "text"
                    },
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{url}}/user/oauth/token",
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "878caa8d-333a-9a72-246d-9c3ad7488db6",
              "name": "Update Estimate (AS)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "0907ba01-9a41-44bf-a312-20cd5f5e8bb7",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "bddbdfb2-dff3-455c-af80-ef153d83ff00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"status\", jsonData.abstractEstimates[0].status);",
                      "postman.setNextRequest(\"Search Estimate AS\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"userInfo\": {\n     \"tenantId\": \"{{tenantId}}\"\n    }\n  },\n  \"abstractEstimates\": [\n    {\n      \"id\": \"{{AE_id}}\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"{{AE_workflow}}\",\n      \"fund\": {\n        \"code\": \"1\"\n      },\n      \"subject\": \"Normal AE: Hospital Construction Project Work\",\n      \"referenceType\": {\n        \"code\":\"Demandfrompublic\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"description\": \"Abstract Estimate for Project Cost Estimation\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"status\": \"{{status}}\",\n      \"stateId\": \"{{stateId}}\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n    \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": false,\n      \"billsCreated\": false,\n      \"spillOverFlag\": false,\n      \"detailedEstimateCreated\": false,\n      \"dpRemarks\": \"Estimation Approved by HOD\",\n      \"documentDetails\": [],\n      \"assetDetails\": [],\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n      \t\"userName\": \"10002\"\n      },\n      \"abstractEstimateDetails\": [\n        {\n          \"id\": \"{{AEdetails_id}}\",\n          \"projectCode\": {\n          \t\"code\": \"{{projectCode}}\"\n          },\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Hspital 2\",\n          \"estimateAmount\": 10000\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"Approve\"\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_update",
                "description": "@CE login"
              },
              "response": []
            },
            {
              "_postman_id": "898f1c9d-efaf-a2d3-d5a8-1fe4aed5665f",
              "name": "Search Estimate AS",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4d84996a-e4d0-4770-aade-784ced3c5663",
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"Logout as CE\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&ids={{AE_id}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "abstractestimates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}"
                    },
                    {
                      "key": "ids",
                      "value": "{{AE_id}}"
                    }
                  ]
                },
                "description": "@CE login"
              },
              "response": []
            },
            {
              "_postman_id": "e8e195fc-0709-886e-5e4b-191d18871d13",
              "name": "Logout as CE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
                },
                "url": {
                  "raw": "{{url}}/user/_logout?access_token={{access_token}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "user",
                    "_logout"
                  ],
                  "query": [
                    {
                      "key": "access_token",
                      "value": "{{access_token}}",
                      "equals": true
                    }
                  ]
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "e028a984-232a-25f6-fba9-e49c4af6e5af",
          "name": "Detailed Estimate",
          "description": "",
          "item": [
            {
              "_postman_id": "4054c1bf-de15-aa40-f4f2-aadc2a0aa182",
              "name": "Login as Clerk",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Tenant ID is default\"] = jsonData.UserRequest.roles[0].tenantId;",
                      "",
                      "postman.setNextRequest(\"Create Estimate\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "clerk",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "12345678",
                      "type": "text"
                    },
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "scope",
                      "value": "read",
                      "type": "text"
                    },
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{url}}/user/oauth/token",
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "46257d1d-f792-0c05-afa1-b51b8efbe02d",
              "name": "Search Project Code",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\":{\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"search\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n    }\n }"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/projectcodes/_search?tenantId={{tenantId}}&codes={{projectCode}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "projectcodes",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "codes",
                      "value": "{{projectCode}}",
                      "equals": true
                    }
                  ]
                },
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "dbf18364-b9e7-e749-4582-f0d145aba50f",
              "name": "Search SOR",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0099e180-4d39-47a4-b443-99045bd2f019",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "",
                      "pm.globals.set(\"sorCode\", jsonData.scheduleOfRates[0].code);",
                      "pm.globals.set(\"sorId\", jsonData.scheduleOfRates[0].id);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t\"RequestInfo\":{\r\n\t\"apiId\": \"works-masters\",\r\n\t\"ver\": \"1.0\",\r\n\t\"ts\": 0,\r\n\t\"action\": \"search\",\r\n\t\"did\": \"1\",\r\n\t\"key\": \"string\",\r\n\t\"msgId\": \"string\",\r\n\t\"requesterId\": \"clerk\",\r\n\t\"authToken\": \"{{access_token}}\"\r\n\t}\r\n}"
                },
                "url": {
                  "raw": "{{url}}/works-masters/v1/scheduleofrates/_search?tenantId={{tenantId}}&sorCodes={{sorCode}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-masters",
                    "v1",
                    "scheduleofrates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "sorCodes",
                      "value": "{{sorCode}}",
                      "equals": true
                    }
                  ]
                },
                "description": "Search SOR master data"
              },
              "response": []
            },
            {
              "_postman_id": "74180e48-a5de-7645-cbd7-981f712138fd",
              "name": "Create DE Normal",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "d5191229-13b9-458c-bb83-59829be28037",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"epochDate\", epoch);",
                      "pm.globals.get(\"projectCode\");",
                      "pm.globals.get(\"sorCode\");",
                      "pm.globals.get(\"sorId\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"estimateDate\": \"{{epochDate}}\",\n      \"nameOfWork\": \"Detailed Estimation for the proposed work\",\n      \"description\": \"Detailed estimate create\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"abstractEstimateDetail\": {\n        \"projectCode\": {\n          \"code\": \"{{projectCode}}\"\n        },\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"workValue\": 900,\n      \"estimateValue\": 1010,\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": {\n        \"code\": \"Buildings\"\n      },\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"location\": \"Sarjapur Road\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"detailedEstimateDeductions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"chartOfAccounts\": {\n          \t\"glcode\": \"1234\"\n          },\n          \"amount\": 1\n        }\n      ],\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"estimateOverheads\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"overhead\": {\n            \"id\": 1,\n            \"code\": \"TAXFake\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"name\": \"test\",\n            \"accountCode\": \"test\"\n          },\n          \"amount\": 110\n        }\n      ],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR64\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"unitRate\": 1000,\n          \"quantity\": 1.01,\n          \"estimateRate\": 1010\n        }\n      ],\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/detailedestimates/_create",
                "description": "Create Detailed Estimate with workflow"
              },
              "response": []
            },
            {
              "_postman_id": "192a75ce-c7bc-752d-d217-fe1fa164c328",
              "name": "Search DE Normal",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/detailedestimates/_search?tenantId={{tenantId}}&pageSize=500",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "detailedestimates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "pageSize",
                      "value": "500",
                      "equals": true
                    }
                  ]
                },
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "51089527-3bfe-1442-878a-c445472d11b9",
              "name": "Logout as Clerk",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3181149-f32b-436b-810c-101108f83715",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "postman.setNextRequest(\"Login as HOD\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
                },
                "url": {
                  "raw": "{{url}}/user/_logout?access_token={{access_token}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "user",
                    "_logout"
                  ],
                  "query": [
                    {
                      "key": "access_token",
                      "value": "{{access_token}}",
                      "equals": true
                    }
                  ]
                },
                "description": null
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "4b507c08-5daa-5fbd-ff39-253ff378aad0",
          "name": "Spillover Flow",
          "description": "Start with the AE(Create_Search) > DE(Create_Search) > LOA(Create_Search) > WO(Create_Search)",
          "item": [
            {
              "_postman_id": "4e5828fa-3aaa-70b7-f20d-b08e2cd6f5aa",
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cbca48d7-56f4-4c0d-9dd6-c00d2c0e3a45",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
                      "pm.globals.set(\"userName\", jsonData.UserRequest.userName);",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "postman.setNextRequest(\"Create sEstimate\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "clerk",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "12345678",
                      "type": "text"
                    },
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "scope",
                      "value": "read",
                      "type": "text"
                    },
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{url}}/user/oauth/token",
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "e071e148-9616-e4b1-aa77-fbbf4a5e88e5",
              "name": "Create sEstimate",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2aee983f-24d8-4c41-9b7e-915d8deb02b8",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "var estimateAmount = [1000, 10000, 100000];",
                      "",
                      "pm.environment.set(\"abstractEstimateNumber\", \"AE/ENG/\"+num1);",
                      "pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
                      "pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"financialSanctionNumber\", \"FS-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);",
                      "pm.environment.set(\"sProjectCode\", \"WIN-\"+year+\"-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "61fa05d8-d60d-4161-ab43-b043c471d585",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"sAEId\", jsonData.abstractEstimates[0].id);",
                      "pm.environment.set(\"sAEdetailsId\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].id);",
                      "pm.environment.set(\"sAEstatus\", jsonData.abstractEstimates[0].status);",
                      "postman.setNextRequest(\"Search sEstimate\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"{{abstractEstimateNumber}}\",\n      \"dateOfProposal\": 1427784646000,\n      \"subject\": \"Spillover AE - Project Estimation\",\n      \"referenceType\": {\n      \t\"code\":\"Demandfrompublic\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Spillover AE Project Estimation for the proposed work\",\n      \"documentDetails\": [],\n      \"assetDetails\": [],      \n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Tendering\"\n      },\n      \"fund\": {\n        \"code\": \"1\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": 1427784646000,\n      \"adminSanctionBy\": {\n        \"userName\": \"clerk\"\n      },\n      \"financialSanctionNumber\": \"{{financialSanctionNumber}}\",\n      \"financialSanctionDate\": 1427784646000,\n      \"financialSanctionBy\": {\n      \t\"userName\": \"clerk\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": 1427784646000,\n      \"spillOverFlag\": true,\n      \"detailedEstimateCreated\": true,\n      \"workOrderCreated\": true,\n      \"billsCreated\": true,\n      \"implementationPeriod\": 5,\n      \"fundAvailable\": true,\n      \"fundSanctioningAuthority\": \"Municipal\",\n      \"pmcRequired\": false,\n      \"pmcType\":\"pmc type\",\n      \"pmcName\":\"pmc Name\",\n      \"workProposedAsPerDP\": false,\n      \"dpRemarks\": \"Dp remarks\",\n      \"landAssetRequired\": true,\n      \"noOfLands\": 10,\n      \"otherAssetSpecificationRemarks\": \"Other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Hospital Building Construction\",\n          \"estimateAmount\": 1000,\n          \"grossAmountBilled\": 900,\n\t\t  \"projectCode\": {\n        \t\t\"code\": \"{{sProjectCode}}\"\n    \t\t }          \n        }\n      ]\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/abstractestimates/_create",
                "description": "Create APi for Data entry type of work estimation"
              },
              "response": []
            },
            {
              "_postman_id": "9331d23c-231f-6f77-174c-c4f53c464de7",
              "name": "Search sEstimate",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df354e5f-f234-46ad-9933-ee8f01c95666",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"sEstimateAmount\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].estimateAmount);",
                      "pm.environment.set(\"sProjectCode\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].projectCode.code);",
                      "pm.environment.set(\"sNameOfWork\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].nameOfWork);",
                      "",
                      "pm.test(\"Spillover AE status is Admin Sanctioned\", function () {",
                      "    pm.expect(\"ADMIN_SANCTIONED\").to.include(jsonData.abstractEstimates[0].status);",
                      "    pm.environment.set(\"sAEstatus\", jsonData.abstractEstimates[0].status);",
                      "});",
                      "",
                      "postman.setNextRequest(\"Create sDE\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&ids={{sAEId}}&statuses=ADMIN_SANCTIONED",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "abstractestimates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "ids",
                      "value": "{{sAEId}}",
                      "equals": true
                    },
                    {
                      "key": "statuses",
                      "value": "ADMIN_SANCTIONED",
                      "equals": true
                    }
                  ]
                },
                "description": "Search AE for Spillover"
              },
              "response": []
            },
            {
              "_postman_id": "dda6b561-465d-b793-2243-90ccdc2badd3",
              "name": "Create sDE",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9112ef56-a90c-49b7-9260-937bc798ff4f",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.get(\"sProjectCode\");",
                      "pm.environment.get(\"sEstimateAmount\");",
                      "pm.environment.get(\"sNameOfWork\");",
                      "pm.environment.set(\"sDENum\", \"Spillover/DE/ENG/\"+num1);",
                      "pm.environment.set(\"sDETechSanNum\", \"Spillover/DE/TS/\"+num1);",
                      "pm.environment.set(\"sDEAdnSanNum\", \"Spillover/DE/ADN/\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "2cce1662-52bd-4f34-a978-c5f6eb83d655",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var jsonData = JSON.parse(responseBody);",
                      "var workValue = jsonData.detailedEstimates[0].workValue;",
                      "var estimateValue = jsonData.detailedEstimates[0].estimateValue;",
                      "var activityAmount = jsonData.detailedEstimates[0].estimateActivities[0].estimateRate;",
                      "",
                      "pm.environment.set(\"sDEstatus\", jsonData.detailedEstimates[0].status);",
                      "postman.setNextRequest(\"Search sDE\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"1427784646000\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"estimateNumber\": \"{{sDENum}}\",\n      \"estimateDate\": 1427784646000,\n      \"nameOfWork\": \"{{sNameOfWork}}\",\n      \"description\": \"Spillover Detailed Estimation for the proposed work\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"adminSanctionNumber\": \"{{sDEAdnSanNum}}\",\n      \"adminSanctionDate\": 1427784646000,\n      \"workValue\": 900,\n      \"estimateValue\": 1000,\n      \"projectCode\": {\n          \"code\": \"{{sProjectCode}}\"\n        },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": {\n        \"code\": \"Buildings\"\n      },\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"location\": \"Sarjapur Road\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": true,\n      \"billsCreated\": true,\n      \"spillOverFlag\": true,\n      \"abstractEstimateDetail\": {\n      \t\"nameOfWork\": \"{{sNameOfWork}}\",\n      \t\"estimateAmount\": \"{{sEstimateAmount}}\",\n        \"projectCode\": {\n          \"code\": \"{{sProjectCode}}\"\n        },\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"multiYearEstimates\": [],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"id\": \"8476e765666a43489f0029eefbd42072\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR65\"\n          },\n          \"uom\": {\n            \"code\": \"MTR\"\n          },\n          \"unitRate\": 300,\n          \"quantity\": 3,\n          \"estimateRate\": 900\n        }\n      ],\n      \"estimateOverheads\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"overhead\": {\n          \t\"accountCode\": \"123\",\n          \t\"name\": \"TAXFake\",\n            \"code\": \"TAXFake\",\n            \"tenantId\": \"{{tenantId}}\"\n          },\n          \"amount\": 100\n        }\n      ],\n      \"detailedEstimateDeductions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"chartOfAccounts\":{\n          \t\"glcode\": \"1981\"\n          },\n          \"amount\": 50\n        }\n      ],\n      \"estimateTechnicalSanctions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"technicalSanctionNumber\": \"{{sDETechSanNum}}\",\n          \"technicalSanctionDate\": 1427784646000,\n          \"technicalSanctionBy\": {\n            \"userName\": \"clerk\"\n          }\n        }\n      ],\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      }\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-estimate/v1/detailedestimates/_create",
                "description": "Create Detailed Estimate"
              },
              "response": []
            },
            {
              "_postman_id": "7ca82064-5c58-2983-1902-914620aa5238",
              "name": "Search sDE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5c40d41c-1b19-41a0-bb49-c83bbf5cb27a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.test(\"Spillover AE status is Technical Sanctioned\", function () {",
                      "    pm.expect(\"TECHNICAL_SANCTIONED\").to.include(jsonData.detailedEstimates[0].status);",
                      "    pm.environment.set(\"sDEstatus\", jsonData.detailedEstimates[0].status);",
                      "});",
                      "pm.environment.set(\"sDEid\", jsonData.detailedEstimates[0].id);",
                      "postman.setNextRequest(\"Create sLOA\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"resMsgId\": \"placeholder\",\n    \"msgId\": \"123\",\n    \"status\": \"200\",\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.1\",\n    \"ts\": \"123456789456\",\n    \"key\": null,\n    \"action\":\"search\",\n    \"authToken\":\"{{access_token}}\"\n    }\n}"
                },
                "url": {
                  "raw": "{{url}}/works-estimate/v1/detailedestimates/_search?tenantId={{tenantId}}&detailedEstimateNumbers={{sDENum}}&statuses=TECHNICAL_SANCTIONED",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-estimate",
                    "v1",
                    "detailedestimates",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "detailedEstimateNumbers",
                      "value": "{{sDENum}}",
                      "equals": true
                    },
                    {
                      "key": "statuses",
                      "value": "TECHNICAL_SANCTIONED",
                      "equals": true
                    }
                  ]
                },
                "description": "Search Detailed Estimate by using params:\ntenantId\nspillOverFlag\nstatuses\ndetailedEstimateNumbers\nworkIdentificationNumbers\nabstractEstimateNumbers\nids\nfromDate\ntoDate\ndepartments\ntypeOfWork\nsubTypeOfWork\nfromAmount\ntoAmount\nnameOfWork\nwards\ncreatedBy\ncurrentOwner\npageSize\npageNumber\nsortBy"
              },
              "response": []
            },
            {
              "_postman_id": "c393113d-8e68-0804-0def-ad2f0ba4e00b",
              "name": "Create sLOA",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e01b86cf-2f16-47a1-9dfd-f757aa9e4415",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "",
                      "pm.environment.set(\"loaNumber\", \"LOA-\"+num1);",
                      "pm.environment.set(\"fileNumber\", \"FN-\"+num1);",
                      "pm.environment.set(\"loaCRN\", \"CRN-LOA-\"+num1);",
                      "pm.environment.get(\"sEstimateNum\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "24c53c58-fd02-453f-a3da-8e3beef9797c",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"loaId\", jsonData.letterOfAcceptances[0].id);",
                      "",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "postman.setNextRequest(\"Search sLOA\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \n  \"letterofacceptances\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"contractor\": {\n        \"code\": \"GRADE-A1\",\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"loaDate\": 1427784646000,\n      \"loaNumber\": \"{{loaNumber}}\",\n      \"contractPeriod\": 5,\n      \"emdAmountDeposited\": 200,\n      \"stampPaperAmount\": 100,\n      \"engineerIncharge\": \"Ritesh\",\n      \"defectLiabilityPeriod\": 10,\n      \"tenderFinalizedPercentage\": 0,\n      \"loaAmount\": 900,\n      \"approvedDate\": 1427784646000,\n      \"fileNumber\": \"{{fileNumber}}\",\n      \"fileDate\": 1427784646000,\n      \"councilResolutionNumber\": \"{{loaCRN}}\",\n      \"councilResolutionDate\": 1427784646000,\n      \"spillOverFlag\": true,\n      \"status\": \"APPROVED\",\n      \"letterOfAcceptanceEstimates\":[\n      \t{\n        \t\"tenantId\": \"{{tenantId}}\",\n        \t\"detailedEstimate\": {\n        \t\"estimateNumber\": \"{{sDENum}}\"\n        \t},\n        \t\"workCompletionDate\": 1427784646000,\n        \t\"loaActivities\": [\n        \t\t{\n       \t\t\t\t\"tenantId\": \"{{tenantId}}\",\n       \t\t\t\t\"collectionMode\":\"CASH\",\n       \t\t\t\t\"percentage\": 10,\n       \t\t\t\t\"amount\": 100\n    \t\t\t}\n      \t\t],\n        \t\"estimateLOAAmount\": 900\n    \t}\n      ],\n      \"securityDeposits\": []\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-workorder/v1/letterofacceptances/_create",
                "description": "LOA for the spillover estimates"
              },
              "response": []
            },
            {
              "_postman_id": "ed353ca4-c3d4-aa76-aa4c-2b14ef2cfad9",
              "name": "Search sLOA",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e79b0a01-3748-46e2-9c58-5a3fa49e952d",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"loaId\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].letterOfAcceptance);",
                      "pm.environment.set(\"loaNumber\", jsonData.letterOfAcceptances[0].loaNumber);",
                      "pm.environment.set(\"loaStatus\", jsonData.letterOfAcceptances[0].status);",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "postman.setNextRequest(\"Create sWO\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{ \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"search\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
                },
                "url": {
                  "raw": "{{url}}/works-workorder/v1/letterofacceptances/_search?tenantId={{tenantId}}&loaNumbers={{loaNumber}}&ids={{loaId}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-workorder",
                    "v1",
                    "letterofacceptances",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "loaNumbers",
                      "value": "{{loaNumber}}",
                      "equals": true
                    },
                    {
                      "key": "ids",
                      "value": "{{loaId}}",
                      "equals": true
                    }
                  ]
                },
                "description": "Search LOA"
              },
              "response": []
            },
            {
              "_postman_id": "fea651e3-d2e0-8b07-3eba-8c33f28c4ef9",
              "name": "Create sWO",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "239540d5-d8d9-4973-ad24-99f80fead0d8",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
                      "var today = new Date();",
                      "var epoch = Math.round(today.getTime()/1000);",
                      "var year = today.getFullYear();",
                      "pm.environment.set(\"workOrderNumber\", \"WO-\"+num1);",
                      "pm.environment.get(\"loaId\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "07ed84b7-989d-48ed-84a2-4c10cf7c3c3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"woID\", jsonData.workOrders[0].id);",
                      "pm.environment.set(\"woNum\", jsonData.workOrders[0].workOrderNumber);",
                      "postman.setNextRequest(\"Search sWO\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\"\n  },\n\t\n  \"workOrders\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"letterOfAcceptance\": {\n        \"id\": \"{{loaId}}\",\n        \"loaNumber\": \"{{loaNumber}}\",\n        \"tenantId\": \"{{tenantId}}\",\n        \"spillOverFlag\": true\n      },\n      \"workOrderDate\": 1427784646000,\n      \"workOrderNumber\": \"{{workOrderNumber}}\",\n      \"status\": \"APPROVED\",\n      \"workOrderDetails\": [\n        {\n        \"tenantId\": \"{{tenantId}}\",\n        \"remarks\":\"CASH\",\n        \"editable\": true\n        }    ],\n      \"documentDetails\":[]\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-workorder/v1/workorders/_create",
                "description": "Work Order for the spillover work"
              },
              "response": []
            },
            {
              "_postman_id": "8588e420-1334-8760-fe45-43f573413ace",
              "name": "Search sWO",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4f474365-c2a1-4cd5-af63-7b151e3629e3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.get(\"loaNumber\");",
                      "pm.environment.set(\"loaId\", jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].letterOfAcceptance);",
                      "pm.environment.set(\"loaEstimateId\", jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].id);",
                      "pm.environment.set(\"sDEid\", jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].detailedEstimate.id);",
                      "pm.environment.set(\"loaActId\", jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].loaActivities[0].id);",
                      "postman.setNextRequest(\"Create sMB\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n    }\n}"
                },
                "url": {
                  "raw": "{{url}}/works-workorder/v1/workorders/_search?tenantId={{tenantId}}&ids={{woID}}&workOrderNumbers={{woNum}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-workorder",
                    "v1",
                    "workorders",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "ids",
                      "value": "{{woID}}",
                      "equals": true
                    },
                    {
                      "key": "workOrderNumbers",
                      "value": "{{woNum}}",
                      "equals": true
                    }
                  ]
                },
                "description": "Search work order for the spillover"
              },
              "response": []
            },
            {
              "_postman_id": "788170d7-2d7e-4e21-f9e9-437bf4e621b1",
              "name": "Create sMB",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e164fb59-8c9d-46fe-95ae-d8e3a77c2016",
                    "type": "text/javascript",
                    "exec": [
                      "var num1 = Math.floor((Math.random() * 10000) + 1);",
                      "pm.environment.set(\"mbRef\", \"MBref-\"+num1);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "e5abba31-7138-4034-aeec-d4ce271a5208",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"MBid\", jsonData.measurementBooks[0].id);",
                      "pm.environment.set(\"MBrefNo\", jsonData.measurementBooks[0].mbRefNo);",
                      "",
                      "postman.setNextRequest(\"Search sMB\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"mbRefNo\": \"{{mbRef}}\",\n      \"contractorComments\": \"First MB\",\n      \"mbDate\": \"1450434548000\",\n      \"mbIssuedDate\": \"1450434548000\",\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"1\",\n      \"toPageNo\": \"100\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{loaEstimateId}}\",\n        \"letterOfAcceptance\": \"{{loaId}}\",\n        \"detailedEstimate\": {\n        \t\"id\": \"{{sDEid}}\",\n        \t\"tenantId\": \"{{tenantId}}\",\n        \t\"estimateNumber\": \"{{sEstimateNum}}\"\n        }\n      },\n      \"revisionLOA\": null,\n      \"status\": \"APPROVED\",\n      \"measurementBookDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"measurementBook\": null,\n          \"quantity\": \"10\",\n          \"rate\": \"100\",\n          \"remarks\": \"remarks\",\n          \"amount\": 1000,\n          \"loaActivity\": {\n          \t\"id\":\"{{loaActId}}\"\n          }\n        }\n      ],\n      \"isLegacyMB\": true,\n      \"mbAmount\": \"1000\",\n      \"approvedDate\": \"1450434548000\",\n      \"documentDetails\": []\n    }\n  ]\n}"
                },
                "url": "{{url}}/works-measurementbook/v1/measurementbooks/_create",
                "description": null
              },
              "response": []
            },
            {
              "_postman_id": "0742eb36-9702-3116-e5a4-dfcc9f2d954f",
              "name": "Search sMB",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "06f4ec09-d385-4509-aa04-ddd1c6535f92",
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"Logout\");"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"resMsgId\": \"placeholder\",\n    \"msgId\": \"123\",\n    \"status\": \"200\",\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.1\",\n    \"ts\": \"123456789456\",\n    \"key\": null,\n    \"action\":\"search\",\n    \"authToken\":\"{{access_token}}\"\n    }\n}"
                },
                "url": {
                  "raw": "{{url}}/works-measurementbook/v1/measurementbooks/_search?tenantId={{tenantId}}&ids={{MBid}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "works-measurementbook",
                    "v1",
                    "measurementbooks",
                    "_search"
                  ],
                  "query": [
                    {
                      "key": "tenantId",
                      "value": "{{tenantId}}",
                      "equals": true
                    },
                    {
                      "key": "ids",
                      "value": "{{MBid}}",
                      "equals": true
                    }
                  ]
                },
                "description": "Search spillover MB"
              },
              "response": []
            },
            {
              "_postman_id": "36162a53-9a4e-14c6-dab2-c9388477e338",
              "name": "Logout",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
                },
                "url": {
                  "raw": "{{url}}/user/_logout?access_token={{access_token}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "user",
                    "_logout"
                  ],
                  "query": [
                    {
                      "key": "access_token",
                      "value": "{{access_token}}",
                      "equals": true
                    }
                  ]
                },
                "description": null
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    }
  ]
}